<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "alfredforum.com"set urlToFetch to "https://www.alfredforum.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "alfredforum.com"set urlToFetch to "https://www.alfredforum.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728479.02454996</real>
				<key>Name</key>
				<string>w: Alfred forum</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>DB0F20E9-F9DB-408A-8C0C-718BE90D6A0D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "https://www.reddit.com/r/all/"set urlToFetch to "https://www.reddit.com/r/all/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "https://www.reddit.com/r/all/"set urlToFetch to "https://www.reddit.com/r/all/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728602.99425197</real>
				<key>Name</key>
				<string>w: All reddit</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>30741B95-3F39-47BE-8CF2-BDEB66C88D8D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "arxiv.org"
set urlToFetch to "https://arxiv.org"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "arxiv.org"set urlToFetch to "https://arxiv.org"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728603.94622195</real>
				<key>Name</key>
				<string>w: Arxiv</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>3C3200BB-A2C3-4C60-8E7A-69CB3BBD9053</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "aws.amazon.com"
set urlToFetch to "https://console.aws.amazon.com/console/home?region=us-east-1#"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "aws.amazon.com"set urlToFetch to "https://console.aws.amazon.com/console/home?region=us-east-1#"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728614.43499601</real>
				<key>Name</key>
				<string>w: AWS</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>D54B55C2-FBA0-4938-B6D5-9F472802E43B</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "bit.ly"
set urlToFetch to "https://www.bit.ly"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "bit.ly"set urlToFetch to "https://www.bit.ly"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>532780823.26755702</real>
				<key>Name</key>
				<string>w: bit.ly</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>718A59B3-0A7D-46A1-86C4-30A7DAE10387</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "brilliant"
set urlToFetch to "https://brilliant.org"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "brilliant"set urlToFetch to "https://brilliant.org"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728617.48820698</real>
				<key>Name</key>
				<string>w: Brilliant</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>7F109DFE-1C13-4394-ADC0-2486EF756FD4</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "codewars.com"
set urlToFetch to "https://www.codewars.com/dashboard"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "codewars.com"set urlToFetch to "https://www.codewars.com/dashboard"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728618.45871603</real>
				<key>Name</key>
				<string>w: Code wars</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>DC737D49-8FA4-460D-92A4-42F217191129</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "codepen"set urlToFetch to "https://codepen.io/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "codepen"set urlToFetch to "https://codepen.io/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728619.79428506</real>
				<key>Name</key>
				<string>w: Codepen</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>F8E6B596-7980-445A-8006-5B7ABE23C024</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "codesandbox.io"
set urlToFetch to "https://codesandbox.io/u/nikitavoloboev/sandboxes"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "codesandbox.io"set urlToFetch to "https://codesandbox.io/u/nikitavoloboev/sandboxes"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728627.83347404</real>
				<key>Name</key>
				<string>w: Codesandbox</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>7CADAD24-502B-462F-9491-518BEDBD9769</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		RGgYFPcAAzhgC4ABOCIEgCuS5FSVJWmaMoyDIIh6VBESXA4DoOhOWpaloZAX
		BaFwIKyfZ/k+aLcF+cB4gABoDNY7DLHCd57tE2AAKyhTZx62SB2GAACNfSIK
		gbHJ52CAoCNKPAdg4AAQghSh8HyfIADwPA9keSJIEgOSuEKQpDFKPQ9DyLUN
		AAWxtHaf5TGg3AQSEABqnS7h6xo0aBTglljgFQACn4fQAAscxugABAXBgAFd
		tLgwAEKIoRTjXYAmqaxsnqJwmicHcFQYiAP5aFUmF4ZgSBGEYEnUeh7n+Qxe
		nA9VEHMeFgn3PkyT0w5+gI1gDnseoACMXxTAAY4ZiJQwOhHXIDLoAwB0AIgT
		AiAAtBgDAAn5E4+j8QJMkQQ5DDQiAyjKMw/kyTJLEAALYlEZZyn+XBrHbXIE
		UAcB2zckNkJa2Z+ALHAGnkdlGlMRYAGCGQggAZQbiWAABHxNwMAiBWHxuAB4
		HtFxHikE8XgU/hgGGYhyCcJYlhiefc8khQBFGUpSmELgtC0HZ8H2fR/kAWpt
		gAeZ8q2bh0JUfWib0w3GyGDB0YkOxQkOABnhGFAAFGKg6WYfbwIJYoAAzSYA
		ALZwtBsDQACOFILgCc50ryKInhRCYMmAQtiEAOgMBUXwvxfDVBmDIGYFRtjq
		HiP8QIsBsueNiOgeJ4HqFbSUREug+y3gABMNsZYAA7CmEkjkCKYxAhle+PwA
		iOFKlbfWnADwFD8PWAACoDi0Q7hIBOAEfA+lghoDOGsPiXhQCFIQCGKALRgD
		BF+M0DwHQPgFGCNgvIoRhjiAAdcuQ4h0kqNJB8hqe4bA2GoL0AAbhXCnIKHg
		NgfAADlAwCZZjDViELWqaUDoFAFpHV0AARQVwWGxLkH4PwhBOiEEIIIMhCAV
		yVB1AkXwxQLAVAqAAWQzhyD/FRF8AA9h8ouHc85ZJEjxkCB+2AAAdROh9NkM
		QZoABGBPDAAAX4MgnMXH2sEhh/yBAPAWjgDQE5BrWIEJAMAMAAq7UAIsRYjh
		WB2mwFUhBOwVA4GAL8XoxyfgYAALQZw4h/iplIPsfZlhyDsO4XSNBdU+gYAk
		6QTQbgegAAoPcdwARRhvEaP8TAGgfGyWcpUhyljWvxfbMpOJqwACUDIDIAK1
		VACKEUI0VQd6PBXIQB6kQKYpjAGeCEEAIQDjFGuOcf4mRbDcAAO+VQ7INwYI
		UweHgigyA2AADsFIFgAimGJOgTAuHmD8HssGecw04AQAaAdGoFHSATdMIkMI
		MaFFyD2HsP4mG2iHDSQgjACwIC6F6L0aoOgbg3A0OGCQ/w8ieGcxdZoABvjm
		HkAAfR1zZRoHzK0L4SXxhuCeCoAIkRYDVXyLx5iy29VNIiBV0azFnA4BVJ0O
		oVAXABqW00MYZAzB0FQKYUwjSGCaE2JoXKnAyhGOurEQAnxngAHCduvA5VcH
		/YOQKdhlgYAoAsAASIbAcgAEQKcaAABbjFHCsyZkPCuEgLkCMDwEK/l0DME5
		1oPwXAbACOMcY4h+BNZOEQaN6RgkMCsFcK4bxSikFGJBpJrBWDAG6P8U4uqZ
		AOdMNcbjkiPlyTCkMQYaLjijFvBcYwzziAGNQg59gGQMLRASjE1szBKhzB4n
		EBLWhbC3FwNkKYUgpg1JOSkhhMAKAdF2LwXQ0QYAvBiBEelSx/h+EyMwAA4n
		pAAHasAAFgTqBRa+AAaQ23JDUG0bjCCgErkCNgXQDIF1okbNKFkIwJAABPB8
		COIkRgABxDgHQQomBLiXjsRNA4bxGCQEeI0ObejSjGGkOYf4jRRXLAoBMuA5
		2bgAbOZYvB3AC4ROKVlOCcAXP4AAPIei4QQgcAcAAQ4bAcWWNgMUZAyx1BSS
		0DUdWo4wETTEA8CwrRXCuGQEMIQQgQr0FiMAb4/xOCuGorkBSOCjrhHQOuMz
		GUAECukQ/AaLwHlwAuBU/A8R5LhBICC7AfQzA1ABZQBYASjjvAAGgNAaw5Cp
		FQKgR5xQa1tCQKsVYqRYAfixVJMgABXC+vyLAXrEh1o6Ret22w5URTylLKY0
		SzjzGWAQAc+migAbubCPKm4DgH1SA4Bc/AdgxAyAABcCYDQAtDRcJISYlRYh
		3DqHUKpIR+ouyillLbdhMCWAwBcDGwl/jcHWrIV41QAaATcOwdrTQNAY0qOL
		fyNehAAHMOevYHQNpjf2SoB4DkhtJNKEYHYIAABbCdHp+IBWzJmAAKQUoqBi
		hvOSFEeXaU1ZRIQYkJYYBGiQEaJIFIJgTrRj6vQZg1R1D/GEMkcgABxjmJUO
		UdRKuDn0JIi4CPUp+ARSGDAFSkAhA5A74/bJBB7ebAAJ4TwoBbh8D4HsMA8f
		TG47YQ+bgOPRB8EcFAKATgcoXkGQYuR5lYjzHow4e6NFrF0AWAo+nwQDmxyg
		QUrY0RqDVHmJQSIlBGm6E+Ihs4/Fw+pJbfUBASgkhLC4FwMAXAzg7B0DoGWV
		QLZTNYRIuQ8x6kqGyNgbI6xYixFmLG+IpBJDf/4NP7D/5ZQiwFInYGgGoGwG
		oICSoFYGIDUBoDgBQjABQfidgfod8CwdgbkDIbQZ4ZwZ4YwZwZwZoYQ4Qdo4
		kAEE4wyyIAbRRg5xUFEF8GEGIlogIAAADwEAAAMAAAABACAAAAEBAAMAAAAB
		ACAAAAECAAMAAAAEAAAvDAEDAAMAAAABAAUAAAEGAAMAAAABAAIAAAERAAQA
		AAABAAAk4gESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABACAAAAEX
		AAQAAAABAAAJbwEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFSAAMAAAABAAEA
		AAFTAAMAAAAEAAAvFIdzAAcAAAfYAAAvHAAAOhoACAAIAAgACAABAAEAAQAB
		AAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgALYWNzcEFQUEwA
		AAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZGVz
		YwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3RwdAAAB0wAAAAU
		clhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAUclRSQwAAB5wA
		AAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wAAAAOZGVzYwAA
		AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAFEdlbmVyaWMg
		UkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NLAAAAKAAAAYRk
		YURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5wdEJSAAAAJgAA
		AiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAAApp6aFRXAAAA
		FgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAAHgAAAyBpdElU
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://github.com/jwasham/coding-interview-university/"
set urlToFetch to "https://github.com/jwasham/coding-interview-university/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://github.com/jwasham/coding-interview-university/"set urlToFetch to "https://github.com/jwasham/coding-interview-university/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728628.78157306</real>
				<key>Name</key>
				<string>w: Coding interview university</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>08104149-5FC5-4455-8985-E4D9F41DE4A2</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://www.coursera.org/"
set urlToFetch to "https://www.coursera.org/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://www.coursera.org/"set urlToFetch to "https://www.coursera.org/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728629.77353799</real>
				<key>Name</key>
				<string>w: Coursera</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>FFA6D3B3-9137-4BBA-BABE-B5D09B5F888D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "discordapp.com"
set urlToFetch to "https://discordapp.com/channels/102860784329052160/102860784329052160"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "discordapp.com"set urlToFetch to "https://discordapp.com/channels/102860784329052160/102860784329052160"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728630.75681698</real>
				<key>Name</key>
				<string>w: Discord</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>0B6BC27A-7F7A-4F98-9600-55EE34FF50AE</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "draw.io"
set urlToFetch to "https://www.draw.io/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "draw.io"set urlToFetch to "https://www.draw.io/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>529690912.95046699</real>
				<key>Name</key>
				<string>w: draw.io</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>505C3519-3966-45EF-83FE-E0556CDAFBCE</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "dribble.com"
set urlToFetch to "https://dribbble.com/shots"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "dribble.com"set urlToFetch to "https://dribbble.com/shots"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728633.07632101</real>
				<key>Name</key>
				<string>w: Dribble</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>7FBFC2B5-EE03-4EE8-A8AA-F2AFE667CC61</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "dropbox.com"
set urlToFetch to "https://www.dropbox.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "dropbox.com"set urlToFetch to "https://www.dropbox.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728634.05142295</real>
				<key>Name</key>
				<string>w: Dropbox</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>B277AEB6-DA5E-4776-A5B3-E35C5E246038</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "duckduckgo.com"
set urlToFetch to ""

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
			
					
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "duckduckgo.com"
set urlToFetch to ""

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
			
					
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728651.72447503</real>
				<key>Name</key>
				<string>w: DuckDuckGo</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>4033E1C8-E93D-409F-A563-370D3490992C</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "facebook.com"set urlToFetch to "https://www.facebook.com/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "facebook.com"set urlToFetch to "https://www.facebook.com/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728653.67800999</real>
				<key>Name</key>
				<string>w: Facebook</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>C4F5A282-057B-455C-BF7E-1E8E9C47DB61</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "freecodeamp.com"
set urlToFetch to "https://www.freecodecamp.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "freecodeamp.com"
set urlToFetch to "https://www.freecodecamp.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728654.77813601</real>
				<key>Name</key>
				<string>w: Freecodecamp</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>923C2EE9-8F12-47DB-A9F7-4153007AC319</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "gitbooks.io"
set urlToFetch to "https://nikitavoloboev.gitbooks.io/knowledge/content/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "gitbooks.io"set urlToFetch to "https://nikitavoloboev.gitbooks.io/knowledge/content/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728655.74575305</real>
				<key>Name</key>
				<string>w: Gitbooks</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>ADE10D55-81C8-4B66-AF7A-0163089B66A3</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		RGgYFPcAAzhgC4ABOCIEgCuS5FSVJWmaMoyDIIh6VBESXA4DoOhOWpaloZAX
		BaFwIKyfZ/k+aLcF+cB4gABoDNY7DLHCd57tE2AAKyhTZx62SB2GAACNfSIK
		gbHJ52CAoCNKPAdg4AAQghSh8HyfIADwPA9keSJIEgOSuEKQpDFKPQ9DyLUN
		AAWxtHaf5TGg3AQSEABqnS7h6xo0aBTglljgFQACn4fQAAscxugABAXBgAFd
		tLgwAEKIoRTjXYAmqaxsnqJwmicHcFQYiAP5aFUmF4ZgSBGEYEnUeh7n+Qxe
		nA9VEHMeFgn3PkyT0w5+gI1gDnseoACMXxTAAY4ZiJQwOhHXIDLoAwB0AIgT
		AiAAtBgDAAn5E4+j8QJMkQQ5DDQiAyjKMw/kyTJLEAALYlEZZyn+XBrHbXIE
		UAcB2zckNkJa2Z+ALHAGnkdlGlMRYAGCGQggAZQbiWAABHxNwMAiBWHxuAB4
		HtFxHikE8XgU/hgGGYhyCcJYlhiefc8khQBFGUpSmELgtC0HZ8H2fR/kAWpt
		gAeZ8q2bh0JUfWib0w3GyGDB0YkOxQkOABnhGFAAFGKg6WYfbwIJYoAAzSYA
		ALZwtBsDQACOFILgCc50ryKInhRCYMmAQtiEAOgMBUXwvxfDVBmDIGYFRtjq
		HiP8QIsBsueNiOgeJ4HqFbSUREug+y3gABMNsZYAA7CmEkjkCKYxAhle+PwA
		iOFKlbfWnADwFD8PWAACoDi0Q7hIBOAEfA+lghoDOGsPiXhQCFIQCGKALRgD
		BF+M0DwHQPgFGCNgvIoRhjiAAdcuQ4h0kqNJB8hqe4bA2GoL0AAbhXCnIKHg
		NgfAADlAwCZZjDViELWqaUDoFAFpHV0AARQVwWGxLkH4PwhBOiEEIIIMhCAV
		yVB1AkXwxQLAVAqAAWQzhyD/FRF8AA9h8ouHc85ZJEjxkCB+2AAAdROh9NkM
		QZoABGBPDAAAX4MgnMXH2sEhh/yBAPAWjgDQE5BrWIEJAMAMAAq7UAIsRYjh
		WB2mwFUhBOwVA4GAL8XoxyfgYAALQZw4h/iplIPsfZlhyDsO4XSNBdU+gYAk
		6QTQbgegAAoPcdwARRhvEaP8TAGgfGyWcpUhyljWvxfbMpOJqwACUDIDIAK1
		VACKEUI0VQd6PBXIQB6kQKYpjAGeCEEAIQDjFGuOcf4mRbDcAAO+VQ7INwYI
		UweHgigyA2AADsFIFgAimGJOgTAuHmD8HssGecw04AQAaAdGoFHSATdMIkMI
		MaFFyD2HsP4mG2iHDSQgjACwIC6F6L0aoOgbg3A0OGCQ/w8ieGcxdZoABvjm
		HkAAfR1zZRoHzK0L4SXxhuCeCoAIkRYDVXyLx5iy29VNIiBV0azFnA4BVJ0O
		oVAXABqW00MYZAzB0FQKYUwjSGCaE2JoXKnAyhGOurEQAnxngAHCduvA5VcH
		/YOQKdhlgYAoAsAASIbAcgAEQKcaAABbjFHCsyZkPCuEgLkCMDwEK/l0DME5
		1oPwXAbACOMcY4h+BNZOEQaN6RgkMCsFcK4bxSikFGJBpJrBWDAG6P8U4uqZ
		AOdMNcbjkiPlyTCkMQYaLjijFvBcYwzziAGNQg59gGQMLRASjE1szBKhzB4n
		EBLWhbC3FwNkKYUgpg1JOSkhhMAKAdF2LwXQ0QYAvBiBEelSx/h+EyMwAA4n
		pAAHasAAFgTqBRa+AAaQ23JDUG0bjCCgErkCNgXQDIF1okbNKFkIwJAABPB8
		COIkRgABxDgHQQomBLiXjsRNA4bxGCQEeI0ObejSjGGkOYf4jRRXLAoBMuA5
		2bgAbOZYvB3AC4ROKVlOCcAXP4AAPIei4QQgcAcAAQ4bAcWWNgMUZAyx1BSS
		0DUdWo4wETTEA8CwrRXCuGQEMIQQgQr0FiMAb4/xOCuGorkBSOCjrhHQOuMz
		GUAECukQ/AaLwHlwAuBU/A8R5LhBICC7AfQzA1ABZQBYASjjvAAGgNAaw5Cp
		FQKgR5xQa1tCQKsVYqRYAfixVJMgABXC+vyLAXrEh1o6Ret22w5URTylLKY0
		SzjzGWAQAc+migAbubCPKm4DgH1SA4Bc/AdgxAyAABcCYDQAtDRcJISYlRYh
		3DqHUKpIR+ouyillLbdhMCWAwBcDGwl/jcHWrIV41QAaATcOwdrTQNAY0qOL
		fyNehAAHMOevYHQNpjf2SoB4DkhtJNKEYHYIAABbCdHp+IBWzJmAAKQUoqBi
		hvOSFEeXaU1ZRIQYkJYYBGiQEaJIFIJgTrRj6vQZg1R1D/GEMkcgABxjmJUO
		UdRKuDn0JIi4CPUp+ARSGDAFSkAhA5A74/bJBB7ebAAJ4TwoBbh8D4HsMA8f
		TG47YQ+bgOPRB8EcFAKATgcoXkGQYuR5lYjzHow4e6NFrF0AWAo+nwQDmxyg
		QUrY0RqDVHmJQSIlBGm6E+Ihs4/Fw+pJbfUBASgkhLC4FwMAXAzg7B0DoGWV
		QLZTNYRIuQ8x6kqGyNgbI6xYixFmLG+IpBJDf/4NP7D/5ZQiwFInYGgGoGwG
		oICSoFYGIDUBoDgBQjABQfidgfod8CwdgbkDIbQZ4ZwZ4YwZwZwZoYQ4Qdo4
		kAEE4wyyIAbRRg5xUFEF8GEGIlogIAAADwEAAAMAAAABACAAAAEBAAMAAAAB
		ACAAAAECAAMAAAAEAAAvDAEDAAMAAAABAAUAAAEGAAMAAAABAAIAAAERAAQA
		AAABAAAk4gESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABACAAAAEX
		AAQAAAABAAAJbwEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFSAAMAAAABAAEA
		AAFTAAMAAAAEAAAvFIdzAAcAAAfYAAAvHAAAOhoACAAIAAgACAABAAEAAQAB
		AAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgALYWNzcEFQUEwA
		AAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZGVz
		YwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3RwdAAAB0wAAAAU
		clhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAUclRSQwAAB5wA
		AAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wAAAAOZGVzYwAA
		AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAFEdlbmVyaWMg
		UkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NLAAAAKAAAAYRk
		YURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5wdEJSAAAAJgAA
		AiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAAApp6aFRXAAAA
		FgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAAHgAAAyBpdElU
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "https://github.com"
set urlToFetch to "https://github.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "https://github.com"set urlToFetch to "https://github.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728662.19537199</real>
				<key>Name</key>
				<string>w: GitHub</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>ACA89C35-15C6-494C-AD40-BC2200AD8C66</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		RGgYFPcAAzhgC4ABOCIEgCuS5FSVJWmaMoyDIIh6VBESXA4DoOhOWpaloZAX
		BaFwIKyfZ/k+aLcF+cB4gABoDNY7DLHCd57tE2AAKyhTZx62SB2GAACNfSIK
		gbHJ52CAoCNKPAdg4AAQghSh8HyfIADwPA9keSJIEgOSuEKQpDFKPQ9DyLUN
		AAWxtHaf5TGg3AQSEABqnS7h6xo0aBTglljgFQACn4fQAAscxugABAXBgAFd
		tLgwAEKIoRTjXYAmqaxsnqJwmicHcFQYiAP5aFUmF4ZgSBGEYEnUeh7n+Qxe
		nA9VEHMeFgn3PkyT0w5+gI1gDnseoACMXxTAAY4ZiJQwOhHXIDLoAwB0AIgT
		AiAAtBgDAAn5E4+j8QJMkQQ5DDQiAyjKMw/kyTJLEAALYlEZZyn+XBrHbXIE
		UAcB2zckNkJa2Z+ALHAGnkdlGlMRYAGCGQggAZQbiWAABHxNwMAiBWHxuAB4
		HtFxHikE8XgU/hgGGYhyCcJYlhiefc8khQBFGUpSmELgtC0HZ8H2fR/kAWpt
		gAeZ8q2bh0JUfWib0w3GyGDB0YkOxQkOABnhGFAAFGKg6WYfbwIJYoAAzSYA
		ALZwtBsDQACOFILgCc50ryKInhRCYMmAQtiEAOgMBUXwvxfDVBmDIGYFRtjq
		HiP8QIsBsueNiOgeJ4HqFbSUREug+y3gABMNsZYAA7CmEkjkCKYxAhle+PwA
		iOFKlbfWnADwFD8PWAACoDi0Q7hIBOAEfA+lghoDOGsPiXhQCFIQCGKALRgD
		BF+M0DwHQPgFGCNgvIoRhjiAAdcuQ4h0kqNJB8hqe4bA2GoL0AAbhXCnIKHg
		NgfAADlAwCZZjDViELWqaUDoFAFpHV0AARQVwWGxLkH4PwhBOiEEIIIMhCAV
		yVB1AkXwxQLAVAqAAWQzhyD/FRF8AA9h8ouHc85ZJEjxkCB+2AAAdROh9NkM
		QZoABGBPDAAAX4MgnMXH2sEhh/yBAPAWjgDQE5BrWIEJAMAMAAq7UAIsRYjh
		WB2mwFUhBOwVA4GAL8XoxyfgYAALQZw4h/iplIPsfZlhyDsO4XSNBdU+gYAk
		6QTQbgegAAoPcdwARRhvEaP8TAGgfGyWcpUhyljWvxfbMpOJqwACUDIDIAK1
		VACKEUI0VQd6PBXIQB6kQKYpjAGeCEEAIQDjFGuOcf4mRbDcAAO+VQ7INwYI
		UweHgigyA2AADsFIFgAimGJOgTAuHmD8HssGecw04AQAaAdGoFHSATdMIkMI
		MaFFyD2HsP4mG2iHDSQgjACwIC6F6L0aoOgbg3A0OGCQ/w8ieGcxdZoABvjm
		HkAAfR1zZRoHzK0L4SXxhuCeCoAIkRYDVXyLx5iy29VNIiBV0azFnA4BVJ0O
		oVAXABqW00MYZAzB0FQKYUwjSGCaE2JoXKnAyhGOurEQAnxngAHCduvA5VcH
		/YOQKdhlgYAoAsAASIbAcgAEQKcaAABbjFHCsyZkPCuEgLkCMDwEK/l0DME5
		1oPwXAbACOMcY4h+BNZOEQaN6RgkMCsFcK4bxSikFGJBpJrBWDAG6P8U4uqZ
		AOdMNcbjkiPlyTCkMQYaLjijFvBcYwzziAGNQg59gGQMLRASjE1szBKhzB4n
		EBLWhbC3FwNkKYUgpg1JOSkhhMAKAdF2LwXQ0QYAvBiBEelSx/h+EyMwAA4n
		pAAHasAAFgTqBRa+AAaQ23JDUG0bjCCgErkCNgXQDIF1okbNKFkIwJAABPB8
		COIkRgABxDgHQQomBLiXjsRNA4bxGCQEeI0ObejSjGGkOYf4jRRXLAoBMuA5
		2bgAbOZYvB3AC4ROKVlOCcAXP4AAPIei4QQgcAcAAQ4bAcWWNgMUZAyx1BSS
		0DUdWo4wETTEA8CwrRXCuGQEMIQQgQr0FiMAb4/xOCuGorkBSOCjrhHQOuMz
		GUAECukQ/AaLwHlwAuBU/A8R5LhBICC7AfQzA1ABZQBYASjjvAAGgNAaw5Cp
		FQKgR5xQa1tCQKsVYqRYAfixVJMgABXC+vyLAXrEh1o6Ret22w5URTylLKY0
		SzjzGWAQAc+migAbubCPKm4DgH1SA4Bc/AdgxAyAABcCYDQAtDRcJISYlRYh
		3DqHUKpIR+ouyillLbdhMCWAwBcDGwl/jcHWrIV41QAaATcOwdrTQNAY0qOL
		fyNehAAHMOevYHQNpjf2SoB4DkhtJNKEYHYIAABbCdHp+IBWzJmAAKQUoqBi
		hvOSFEeXaU1ZRIQYkJYYBGiQEaJIFIJgTrRj6vQZg1R1D/GEMkcgABxjmJUO
		UdRKuDn0JIi4CPUp+ARSGDAFSkAhA5A74/bJBB7ebAAJ4TwoBbh8D4HsMA8f
		TG47YQ+bgOPRB8EcFAKATgcoXkGQYuR5lYjzHow4e6NFrF0AWAo+nwQDmxyg
		QUrY0RqDVHmJQSIlBGm6E+Ihs4/Fw+pJbfUBASgkhLC4FwMAXAzg7B0DoGWV
		QLZTNYRIuQ8x6kqGyNgbI6xYixFmLG+IpBJDf/4NP7D/5ZQiwFInYGgGoGwG
		oICSoFYGIDUBoDgBQjABQfidgfod8CwdgbkDIbQZ4ZwZ4YwZwZwZoYQ4Qdo4
		kAEE4wyyIAbRRg5xUFEF8GEGIlogIAAADwEAAAMAAAABACAAAAEBAAMAAAAB
		ACAAAAECAAMAAAAEAAAvDAEDAAMAAAABAAUAAAEGAAMAAAABAAIAAAERAAQA
		AAABAAAk4gESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABACAAAAEX
		AAQAAAABAAAJbwEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFSAAMAAAABAAEA
		AAFTAAMAAAAEAAAvFIdzAAcAAAfYAAAvHAAAOhoACAAIAAgACAABAAEAAQAB
		AAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgALYWNzcEFQUEwA
		AAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZGVz
		YwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3RwdAAAB0wAAAAU
		clhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAUclRSQwAAB5wA
		AAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wAAAAOZGVzYwAA
		AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAFEdlbmVyaWMg
		UkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NLAAAAKAAAAYRk
		YURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5wdEJSAAAAJgAA
		AiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAAApp6aFRXAAAA
		FgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAAHgAAAyBpdElU
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://github.com/notifications?all=1"
set urlToFetch to "https://github.com/notifications?all=1"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://github.com/notifications?all=1"
set urlToFetch to "https://github.com/notifications?all=1"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728665.61272395</real>
				<key>Name</key>
				<string>w: GitHub - all notifications</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>660F2867-D6BC-43FD-B58F-61E4746AD12F</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://github.com/issues/assigned/"
set urlToFetch to "https://github.com/issues/assigned/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://github.com/issues/assigned/"set urlToFetch to "https://github.com/issues/assigned/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728667.791399</real>
				<key>Name</key>
				<string>w: GitHub - assigned issues</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>D5248081-40D3-4EB6-A176-6FD271D7CDE9</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to ""set urlToFetch to "https://github.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to ""set urlToFetch to "https://github.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728669.93726397</real>
				<key>Name</key>
				<string>w: GitHub - front</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>0FAB6D97-CD41-43B2-9F40-487CD9D8937D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://github.com/notifications/"
set urlToFetch to "https://github.com/notifications/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://github.com/notifications/"set urlToFetch to "https://github.com/notifications/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728672.43193603</real>
				<key>Name</key>
				<string>w: GitHub - notifications</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>09A095E8-A433-4784-9F04-86E7309BB00F</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://github.com/trending"
set urlToFetch to "https://github.com/trending"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://github.com/trending"set urlToFetch to "https://github.com/trending"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728674.19265902</real>
				<key>Name</key>
				<string>w: GitHub trending</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>F631CDBA-6278-4DF6-892C-9F52106882F2</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "gitter.im"
set urlToFetch to "https://gitter.im/Microsoft/vscode"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "gitter.im"set urlToFetch to "https://gitter.im/Microsoft/vscode"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728676.50786304</real>
				<key>Name</key>
				<string>w: Gitter</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>48E56575-781C-484E-B0D7-AC7D3373FF62</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "play.golang"
set urlToFetch to "https://play.golang.org/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "play.golang"
set urlToFetch to "https://play.golang.org/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728677.44931102</real>
				<key>Name</key>
				<string>w: Go playground</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>416F4200-3CDC-4456-88CA-32B42C882DCE</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://godoc.org/"
set urlToFetch to "https://godoc.org/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://godoc.org/"set urlToFetch to "https://godoc.org/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728678.43903303</real>
				<key>Name</key>
				<string>w: Godoc</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>8129E61E-F668-4454-BB19-41EAF8106C0E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "google.nl"
set urlToFetch to ""

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "google.nl"
set urlToFetch to ""

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728679.42655301</real>
				<key>Name</key>
				<string>w: Google</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>6B8B6130-C33F-4B02-9721-B5C19B37FD1B</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		RGgYFPcAAzhgC4ABOCIEgCuS5FSVJWmaMoyDIIh6VBESXA4DoOhOWpaloZAX
		BaFwIKyfZ/k+aLcF+cB4gABoDNY7DLHCd57tE2AAKyhTZx62SB2GAACNfSIK
		gbHJ52CAoCNKPAdg4AAQghSh8HyfIADwPA9keSJIEgOSuEKQpDFKPQ9DyLUN
		AAWxtHaf5TGg3AQSEABqnS7h6xo0aBTglljgFQACn4fQAAscxugABAXBgAFd
		tLgwAEKIoRTjXYAmqaxsnqJwmicHcFQYiAP5aFUmF4ZgSBGEYEnUeh7n+Qxe
		nA9VEHMeFgn3PkyT0w5+gI1gDnseoACMXxTAAY4ZiJQwOhHXIDLoAwB0AIgT
		AiAAtBgDAAn5E4+j8QJMkQQ5DDQiAyjKMw/kyTJLEAALYlEZZyn+XBrHbXIE
		UAcB2zckNkJa2Z+ALHAGnkdlGlMRYAGCGQggAZQbiWAABHxNwMAiBWHxuAB4
		HtFxHikE8XgU/hgGGYhyCcJYlhiefc8khQBFGUpSmELgtC0HZ8H2fR/kAWpt
		gAeZ8q2bh0JUfWib0w3GyGDB0YkOxQkOABnhGFAAFGKg6WYfbwIJYoAAzSYA
		ALZwtBsDQACOFILgCc50ryKInhRCYMmAQtiEAOgMBUXwvxfDVBmDIGYFRtjq
		HiP8QIsBsueNiOgeJ4HqFbSUREug+y3gABMNsZYAA7CmEkjkCKYxAhle+PwA
		iOFKlbfWnADwFD8PWAACoDi0Q7hIBOAEfA+lghoDOGsPiXhQCFIQCGKALRgD
		BF+M0DwHQPgFGCNgvIoRhjiAAdcuQ4h0kqNJB8hqe4bA2GoL0AAbhXCnIKHg
		NgfAADlAwCZZjDViELWqaUDoFAFpHV0AARQVwWGxLkH4PwhBOiEEIIIMhCAV
		yVB1AkXwxQLAVAqAAWQzhyD/FRF8AA9h8ouHc85ZJEjxkCB+2AAAdROh9NkM
		QZoABGBPDAAAX4MgnMXH2sEhh/yBAPAWjgDQE5BrWIEJAMAMAAq7UAIsRYjh
		WB2mwFUhBOwVA4GAL8XoxyfgYAALQZw4h/iplIPsfZlhyDsO4XSNBdU+gYAk
		6QTQbgegAAoPcdwARRhvEaP8TAGgfGyWcpUhyljWvxfbMpOJqwACUDIDIAK1
		VACKEUI0VQd6PBXIQB6kQKYpjAGeCEEAIQDjFGuOcf4mRbDcAAO+VQ7INwYI
		UweHgigyA2AADsFIFgAimGJOgTAuHmD8HssGecw04AQAaAdGoFHSATdMIkMI
		MaFFyD2HsP4mG2iHDSQgjACwIC6F6L0aoOgbg3A0OGCQ/w8ieGcxdZoABvjm
		HkAAfR1zZRoHzK0L4SXxhuCeCoAIkRYDVXyLx5iy29VNIiBV0azFnA4BVJ0O
		oVAXABqW00MYZAzB0FQKYUwjSGCaE2JoXKnAyhGOurEQAnxngAHCduvA5VcH
		/YOQKdhlgYAoAsAASIbAcgAEQKcaAABbjFHCsyZkPCuEgLkCMDwEK/l0DME5
		1oPwXAbACOMcY4h+BNZOEQaN6RgkMCsFcK4bxSikFGJBpJrBWDAG6P8U4uqZ
		AOdMNcbjkiPlyTCkMQYaLjijFvBcYwzziAGNQg59gGQMLRASjE1szBKhzB4n
		EBLWhbC3FwNkKYUgpg1JOSkhhMAKAdF2LwXQ0QYAvBiBEelSx/h+EyMwAA4n
		pAAHasAAFgTqBRa+AAaQ23JDUG0bjCCgErkCNgXQDIF1okbNKFkIwJAABPB8
		COIkRgABxDgHQQomBLiXjsRNA4bxGCQEeI0ObejSjGGkOYf4jRRXLAoBMuA5
		2bgAbOZYvB3AC4ROKVlOCcAXP4AAPIei4QQgcAcAAQ4bAcWWNgMUZAyx1BSS
		0DUdWo4wETTEA8CwrRXCuGQEMIQQgQr0FiMAb4/xOCuGorkBSOCjrhHQOuMz
		GUAECukQ/AaLwHlwAuBU/A8R5LhBICC7AfQzA1ABZQBYASjjvAAGgNAaw5Cp
		FQKgR5xQa1tCQKsVYqRYAfixVJMgABXC+vyLAXrEh1o6Ret22w5URTylLKY0
		SzjzGWAQAc+migAbubCPKm4DgH1SA4Bc/AdgxAyAABcCYDQAtDRcJISYlRYh
		3DqHUKpIR+ouyillLbdhMCWAwBcDGwl/jcHWrIV41QAaATcOwdrTQNAY0qOL
		fyNehAAHMOevYHQNpjf2SoB4DkhtJNKEYHYIAABbCdHp+IBWzJmAAKQUoqBi
		hvOSFEeXaU1ZRIQYkJYYBGiQEaJIFIJgTrRj6vQZg1R1D/GEMkcgABxjmJUO
		UdRKuDn0JIi4CPUp+ARSGDAFSkAhA5A74/bJBB7ebAAJ4TwoBbh8D4HsMA8f
		TG47YQ+bgOPRB8EcFAKATgcoXkGQYuR5lYjzHow4e6NFrF0AWAo+nwQDmxyg
		QUrY0RqDVHmJQSIlBGm6E+Ihs4/Fw+pJbfUBASgkhLC4FwMAXAzg7B0DoGWV
		QLZTNYRIuQ8x6kqGyNgbI6xYixFmLG+IpBJDf/4NP7D/5ZQiwFInYGgGoGwG
		oICSoFYGIDUBoDgBQjABQfidgfod8CwdgbkDIbQZ4ZwZ4YwZwZwZoYQ4Qdo4
		kAEE4wyyIAbRRg5xUFEF8GEGIlogIAAADwEAAAMAAAABACAAAAEBAAMAAAAB
		ACAAAAECAAMAAAAEAAAvDAEDAAMAAAABAAUAAAEGAAMAAAABAAIAAAERAAQA
		AAABAAAk4gESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABACAAAAEX
		AAQAAAABAAAJbwEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFSAAMAAAABAAEA
		AAFTAAMAAAAEAAAvFIdzAAcAAAfYAAAvHAAAOhoACAAIAAgACAABAAEAAQAB
		AAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgALYWNzcEFQUEwA
		AAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZGVz
		YwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3RwdAAAB0wAAAAU
		clhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAUclRSQwAAB5wA
		AAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wAAAAOZGVzYwAA
		AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAFEdlbmVyaWMg
		UkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NLAAAAKAAAAYRk
		YURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5wdEJSAAAAJgAA
		AiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAAApp6aFRXAAAA
		FgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAAHgAAAyBpdElU
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "https://analytics.google.com/analytics/"
set urlToFetch to "https://analytics.google.com/analytics/web/#realtime/rt-traffic/a74470910w145637891p150384648/%3Fmetric.type%3D0/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "https://analytics.google.com/analytics/"set urlToFetch to "https://analytics.google.com/analytics/web/#realtime/rt-traffic/a74470910w145637891p150384648/%3Fmetric.type%3D0/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728680.426157</real>
				<key>Name</key>
				<string>w: Google analytics</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>2AAC9971-651C-49B1-803B-D00BF53936A5</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "drive.google"
set urlToFetch to "https://drive.google.com/drive/my-drive"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "drive.google"set urlToFetch to "https://drive.google.com/drive/my-drive"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728681.41843796</real>
				<key>Name</key>
				<string>w: Google drive</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>CE74A048-8680-4972-BCCF-8EB5D7A4DA17</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "habrahabr.ru"
set urlToFetch to "https://habrahabr.ru"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "habrahabr.ru"set urlToFetch to "https://habrahabr.ru"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728682.40898001</real>
				<key>Name</key>
				<string>w: Habrahabr</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>51942877-4839-403D-975B-3C2B1B8A40E7</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://news.ycombinator.com/newest"
set urlToFetch to "https://news.ycombinator.com/newest"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://news.ycombinator.com/newest"
set urlToFetch to "https://news.ycombinator.com/newest"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728683.50832605</real>
				<key>Name</key>
				<string>w: Hacker news new</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>1DA62D14-7963-4E61-A20B-34D3EB22C11E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "hackerrank.com"
set urlToFetch to "https://www.hackerrank.com/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "hackerrank.com"set urlToFetch to "https://www.hackerrank.com/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728684.50582099</real>
				<key>Name</key>
				<string>w: Hackerrank</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>D9F6065E-87CA-43C6-8A5D-96F71ED2109B</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		TU0AKgAAHECAACBQOCQWDQeEQmFQuGQ2HQ+IRGJROKRWLReMRmNRuOR2PR+Q
		SGRSOSSWTSeUSmDgmWAwLy8OhqZCEKBUKh0IhAJBUFAsEg0BgIBgN+0V+vV7
		PV5PB3vF1090uNzVNvumrON8Vl6yquV2vQ4P2EUDQajUhjQZjQhCUTCYYBYL
		hYNA4Hg8EAkEAgAAUCAQAAEBAG/4N/4UAUYAPuigB8PZ7gB5ZF8VZ0uRt5do
		MxlsxfMxmMpeuPRNqv6XTRcFakHD4fD8nEklEkvC8YDAdBncAvdAoAXkDAAD
		cEAAe+P+hAMAYHBAHmQnCv/D4Z+dMAPp8vsAvl8vgAPd8PoAPWkADKPRoedi
		LdarZRMNhsJZVl8VvT/WuywEgwlkwmGEqCqKo1BWFYWBQCQIgeAAGAW3iegS
		f4CKGwSBue6CDueiLmQmgbmwmwUKn3ELIHmeoAnoeh7AAeB4niABrmsaxqlW
		VRVEmW0blG7R8xS+0eo4Hgeh6J4zyIQIZBmGoXgkCQHABBAHH+A4DgNDYAQr
		DCISqh8LQzDsNQq8R7H+dp3HgAR4HkegAGgZpnGaTE4D8ZBkGMW0fTuhoIT0
		Co1DUNhDigKYpDGDYMguAAJgmCEouCAMrsMhENw05ctoFCx/w8waHUvCqFuU
		5bBHnE5+nSdZ2gGdh2HefpXFYVZNEwS5Lj2edanfPEfBTXQaj2Po/E6G4bBs
		FoLAqCQAAcBwGStR6E0/TSCHcfJ+H+bh6H2ABvHk8B0HxbB2Wm6p+oEfJ/Og
		A7AuGoNEXQAAMgSAoABCBt4hKBi9AjdEtQtc1IIMAWAUdftSnYf0yHgAZmGb
		NpCECQIxm5iJoVwrrWB8KI+D8QBOBQFASAkDALAof4C5KAJ/ZRLiC2e5p4n0
		fp/mSdcUmKdMUm2eLHw1ZiBW3cYQrsABuHg7ggA2BoAGOdE1AcAy/HqxUFAK
		5AJAO5B0nu8ATAeA4AB6DGkBuCoE6kAcPuhfuVZ3ScSHqfhynKdICHCcJxnW
		QA/D4ME5mRO2KJEI/Ai4PpAECTYRBADwEAwC+RoJLEOQ8wAAne65/lmcJ5gA
		YZz80cZ5vADIGN+AjAakAQABSCWyFobx3AAI4PggABcnCeAADAFNDlKbZ1gA
		GgK2Wa54RSG4LWWeh+H8ABgHHFoOgcvRyHm7gLAVeIjA9BIl+gAAHgMwNm5X
		gJ9RCfpwHEcgAnOcx1HuQI/j8MJfl+XxV7+jQhf0KxBkMQwogSAiBCAdYqx1
		HsqOScoww/xbDiHkAAV43nbu2HyAAIoIHZjnHseAdTUAAAzeOAAZQ6U1BSY+
		AAUY1h1AABq6IAAzx0lbC6CkCoABSjYd8W9pA0h2FbCyCcCYABbjgduYo6AK
		wJm8GKOaB4Oi5gAF8ON24FwFG/C2CiIIRgNgMSq2kgik2UD+H6N8cI5B/jlH
		MOkfYew9B4CwMU9wsn8ERNqDAHwjhJCSFoCsE4JQGgWZElZlMCCBMAMCzMfY
		/xLjThWMQccDwNvRAAB8BzXRyj0PAEQDzsxRDUHSABYiyxsDuK2FoFAFgACs
		G0OwxjyloBDdkAAYI5EWr9AAARdIYgWAYAAJgaQ5wAAlAibwdw91sPQa7FRe
		ItRuOvBEBI3g3R3IpBwBpZYbC3gAAkAh0sg4voajCP0b0ZB/t0HIPQN4bg2h
		IRgNYZMcyESAAsB1OAmRhA3BwDYEAGmQpWWY5CQrARrTTH+IYYw5QAALOIAA
		EgEWyC7G6O0AASgSAUAAMkc6LQnAlosL52wAByjxO4usAADQDl+g28tmDy3H
		oWObP4gTpXUARAQvEdg94KnMdQ6ggQYwYS8FINSFYH2gvXdQNFpYAGwNdH2y
		gAAdgbAaAACamjJ2UkEU+Ps6Y/BtjeHCAIaY0RqjdDWGoM4Ph21pHRHOQwBB
		DiIEUK8KwVgqBMA8B0DKmDm0AgSYEZbSx/iOGQOZJz1wAPOMeGEF9UheDgVu
		OgecFSCOjOQzA6A8B7j8Wg8s6DqEtEUlscqmFJaTgABFQ6F454HgwAyk0aVk
		AABVBVKhz8FRgDeVu8c34eAdAbAAC8CwC6rLmqwwFto+26DlAKLEWAsBVh8D
		2HsLBA6WJ3CeFEKIaBCiEEKJcEIIgOj/AUXm4bKpDABGjB0f4hBhDjABKRbA
		PIMAAWoQKxyKQqAqUOJ8Z9CHlHQUhS9ShpsAAAuIABsxgqmvLB8CBY7Rzfik
		GhWsG8sRzPURUPZbAhghggAACoCgCry3FbMOgqw+ByPtAQH4PQewvi3FwexH
		pNgKgcE6KEUIywcg1BoBgCgFAI4GquQNgIAXnD6H+HIXA3HfgbdmtuzQyBwq
		3BaBhJo2x2lbeivEeq4R+MwngQxLgMwOOztfA8EADl4gYAebwYTrpJgTbIdd
		5YiAighqUAwAtVjCs7IINsbg4B+DVGsNgdAYwwhfBoO/RkKzShvDeHESOkQ3
		BuA+TGvTZzoM7H1fUPYvBvLZHcdzL50AvAzt8NWDoABiDeokUF1DaFoU6zCQ
		gf7yx/ACL8P8fh4ASjcGaAAdgKAZmQZIAAKSxDEyuFUNGYANJNgAEPneW9PE
		MXnVEPQfI3hwDlAOJgSwlhEqxEsHgroG90AjFCKIUYzi0AvLoA9JsYbzMBE6
		M0cw/xRjLmAEUE8qFr2aGnSEAAS79RQG5RIeS3loa1IaP4Aa8QDD6RSEwWgn
		QADMBgD0AA4QRAwAAFoF0qB1baAALaFVpgKALwytgKnIwABbBgBfEeRGAzjH
		EPkbI2lrBgC8F0GI6uhXuJOGlPoiQ7dJDsB8DwGmVbXYCNsdiYhDi+HEuJcY
		4x3mPBdE+KR3B6cMKDZ/hxCx+gEN+AwerrwzieEKAAaIKAYgAF0EcLxvR9wV
		Ak6MAA52iAAn1kECFNYoO9OGAV1AlgpApAABx7+fDjMBHoeIfI3RvjjAOJMS
		AkRACdE6JwQJJAGejAgKAUQpBpBBCADwDqB0E70UkwEPwuBvD/GparmOZOO9
		/F4NiFbL3l2e7KRAfYBmugWHQN8AAcxNiDAAOYCsqBKBmEMX8ftmlHNoMN2N
		ZHhB66dAAEME0qKIlbycb8PYQwQsCltQEwOgBvj6GaM8aA4QwheC8DE+R9CP
		BA/8CmEoEqEsFYBMBKBAQgL6n+r6ACGyvUD+FuG6wQXSHQswAACABMhqpqdQ
		FwGqk+kM+GIW+KL0BG2A+WE8EYMOXSD4DoEcAAHoAYiCAEjEISKKeWBYA6dm
		CGBKWOGgem1YoiL2bMAAEuCuBWkmqq3ovOHYTIHu24HGAQnSDcCYToTqJAD6
		D6D+FGDQDSDOC4A0Ayhq3ouKMCEcF+HAgYGkk+B7AwIKGCGyd8XTBAIUr0vo
		AML0BoGaF0AADWFME0oSg2AAD+DcDuRcBQB2L2H0MeIYwOBIAuWWHWsjBcHw
		s0BWA0QSHClIAACMBUhqDS9YvKUmq2H2GyG2G+AKFHFQE2EUEQEQDMI4PwAY
		FGFKFKGmCGCEB+gw3kyEXMU+siWoDqFeNIpSAAHEHYTUQi1igXDkUiMEH64i
		gsGEFSAADCVcAAN4gqE+CWCgAAFgCQDKluH2O4IoH6uIAMXWB2BKiDEgPAGq
		4IA2dWAAE8C4BaOAlxAUvOG424HyGUGUGaG+0S/yH1IFHEIsBOBOLGFCFIFI
		GQBeBaBSAGSmAKU6vOGOG+HeH+ESFrAiCSBel4y2Wyh6lk98MTHI4a1q1yOQ
		AEH+XGCqFuE2AACmF6F6luwMouBWBQAAEaDAEAMOACL8YEIyS4acdQA4Ak5Y
		BYaOAAGKywAAD0ooAABke0vKvOHOHQHQHsG1FKAEDEDADCBqG8G8G6GoIwCW
		CaCaDGEfLSE4BGBCvCZ26gMCE0GGHCH+FgGYmA+AOHHsA+AoWWG6HUc0OuXG
		7IVw7OXiASHwc0DGFgEk/CGYGevoOSveAi5YD8DNJ4HUAqw8AE17KCQsAiXu
		AACoBqt9GMgrHageGuloAADGCAzwDAB0A5KmYCMieoG0G6HCAQD0DuDuC0F2
		F2F0FOIwDWDYDcEaDyDyDuDkA2A0lQ9gckMCDkFQGoH+7CeWBHEcAAG2HRNT
		NWams9MIPsQsH4AKN+AmHeoQDYFaEiAABjNuMYL3JoeWEYC0DGaSBkCUL2Hz
		EVPCIkQsYAIEUov+AAAgAWN+S4BVKSEOvy+ywOOYRCRCGxFKAKEoEmEmEKE2
		EyEyD4IwEKEOEOFaDKDIDGCkAqyBF2OMQ0WmXMDIE7MhGKK2X8Q45sQmkIK+
		S4MEH0AKa6BAHIGsAADiFcEmkmHMd8grMOMTG4B3EOFACYDeluH6WwtGJCOg
		zAt+wcSdQNO0HQRbO/HiDIBlAkS0jCH9QkG6ACFUFSFYFQEEEAD+C2IwEsEw
		EyGGCuCsCmB49dRQyKHSHiHyH+DyFSGrAs4OIJMEiEGgsIHZT8OTP6K6kSME
		BcG6neDgFkE+ScHkK2PAL8N+s0G2A8AyAAEEC6D+MYAQWWADJKJQL6dQXgL8
		ZNHqOQy+eWE4DLTCAgeuZOOeZ252G8H4FwFyF0GCDinSCKIoKGKGE4E+FAGa
		CgCcCUBeAhF1CSOUHC6mH+DGEuGYMSqaAAASaspKsMHg++AAHyH0eXUcJQWw
		dQB4AUc0DcEUDsluHec0s0XidQeWH0AEXiD8DEDmAAG6A6BcluH4skJPHJBt
		SwB0BOhqO+s0HckwAAGMGylYEuDK5AA2oc8gvPFIG6HyGAGAGIGgDQDMDIBw
		IoZLR2E+FEFEGeCYCSCQBSLqWXWoOYG0HOHoH+D7OmlAA8WOy+XGGMGud8g3
		XWpeNLBq8ahCEwDRZOAUFkFe2EDKD0SsHmRSbIIEEsCTG2FsBuumAKH2R5JM
		JUwAX4X4uIAW8IE6DYBqkmxDY2YCG4G6HAH0PcGKGpRGDEBrTIIgL67RZW3a
		CYCUCQBXWlZoZSyKG8vUDIEknfRXTEMPJKYDQDRuQs+4ESDABoAABwo4UcIG
		HwF2F4H+HyC6DYAAF6AmqkEgChEIZ4UsNOKKOgA+bAAABZZ8PC4YGhCAEuDT
		baA+bHbg/eG4G+HyGGGIGNbwDFK8U6IkAEE7WWGUCkCgCaBmT03ncRWqZmH+
		D0FGGkAABcBCWOAVXBS8FkGQ6uHiy6L/aOJMRCs0C+CNJwDUCQBM/YX8vOGq
		FsGGH+DqFlAiHgAjVDBkXGNOMNbSN/QAO6XCfKeWAdS0FEDiByAAAsAgAPeC
		ADKyG8H1JkGAGWDVC4B4IwEgEkEmF4C2C0CwCGAoUVT2OUHekwH+DYEwGdUa
		IEHsOuOrW6HjYjHI03XSI006XGBgoqAAEmDPZOacQ3h8MCGOhwvWFXUGHcHi
		RSAGwCPrdig+BQhqBqo5fWIFAoO4GVJGFADjZOAYpPc8U6H/gycuFoFsFwDs
		DoDmCYIwV6D8FEDYDYDSC6ZCotOe00dwEgGRciIEA4xDO0HKgeHPGNUap4JA
		QmjDXCN+EuDaB0AABGta+yz6Q0FmGUHGH+EaFWGmMYfKwQKHdeTvkgqclsam
		OQZKdQBGieE2DcBvBoKNV6AGxwFGE2EXFWDOIwDADADEY1TaECA8A4AxeY5s
		bMEAFIGiH+GmscAAHs4YTQgrcnRlRsI1ixN67mCkB0A+bPQCMEE6F0G2H+E4
		FrR+UhDijmUg+4B467JIeWGelWAAB8p+AAEAC2BeqsZgUmHwO0H054HAAMEV
		Q+DqFNoVBQIuB6B+B+CgViEwFeLaBCH+1hHuKEACFMF+G+H+EmFbLGBUBCiC
		BcBGWOfKXGFezeJDXMeWCQBwA8AAEKDABmVA2WXMEaFblGFcF+1CAGdLi8ng
		UgQQL1fGptAqAipNBcw0AADQCg8YCmB2A9n88iMCHcTKHuG3NxCgDcDYCSGS
		TmFyIwJkA0BGFKFOFOGiBsBoBiJ8JYOe+CoEdsH+E0FmNIA0Aq5YGdYo+fkY
		RCurm3JKA2ysAAE6DoB8m0kqACHkw0H+EE3aAAF+GYvcacORDkltDA5YCUwq
		OBHMAAGmmkABr4k+FAD1sSA+ePNmMCfSHKHuGsGuG0HwC8C2C2BcKeHWHIIw
		raEyE4E6GNWcCYBrhWdnj/dcDCESGGAAG0iJKgBSlRYcAAGlr7cncmIg1uOg
		QkAAEYDZhCByBYAsACHMHaTED2E4GVulJGODsvbHBAwKH2Zem0mGAAA7OyJ8
		L8EkDblqIYGzHyH6F8F8GAGQDWDQDQB+uoI4DMDMDOEKxaD0D0rurypas7o0
		FOF6G6H+FqGKvcL6MEGumaURHgtEVMRTgSIZIEXGDACfCMDaCmBYACGtroD4
		E1kGjKRaAManGWIRpTgmAm5YBznltCd9FKVuECDRbaCevlqqvOHtyaH0q6HE
		AMEeEYEaD4xwFA7eI+Y6BQBrcAGMBcBYBOAILwARImOUHgWuH+CwD6F2MgHk
		WwCMB2A+AABQA8yCFWF8G2sPkSgTPCq1iEd0AAE4DyCDYkGmk+Y2ne0YMeAI
		8RlRDkwKJ8N+CeCCBGeYGdt0HcHeO4BIliRIPAE8D1wPvvoybMxSHOHuG7bm
		ACDEC+DABsnGG7lGI/WQAGEmEoEsGCCiCmCcB2AxRNRQxIACE2FkGwH+G9B8
		IIGEGY6uSkL8RQPApgZ2quAbqWFEEDWNnqlYESE9W2O+WwKG2tx0IRkiBBBw
		AACeB/0sG+iYAAFaF0NIDqDDTCC2CMBLqr2mjDKy+UF1dCGBWIDcCLmUJCCO
		CSNkEd4QFCgCA+ZIL5AUZ3mos0C8EAF8AAHQ1WCQB6zwGuzgGwG6lYAgAaL1
		2hdcD5iOABh2gqEmFNMgphut3GIJki1KAAA8A2QToCs0HYmmlA3+lvCEEmDr
		hCAQfBoykOTIHwuSARjiDoCqfoF8FYJQLyAQAWE2E8E+GUCMCICEtmWN2DmW
		ACGEGcHOH+EoFTe8HoaypA9wCwCUBUO6HwXGFgF6GyAACT3UScAabIFUFwGv
		z7Ubh+4daSBTi73CWyymomB6BEhfDfYBEwAAEyD8CEd+tn3wr2OfgyH8GOGQ
		GWGmDODKDGB1QhIIJSCQCQCSC6EWEaEYFEBKBH4YODQOMMwEACbMEaFIGe30
		FhR+DICoBeABhePAFnzyAAAomh+ItQGiGsrXPLJ+QpBBiUkIlsAbS0DMCs5A
		GBsoheGorWAgkkCoCMBJqcCpxeMKstP/o0MoHwHEbiAQDvjl6afp6gNLWQAK
		EejyF0CgCeCaCAA4IAGgy/wAAII/4QAADCwA+35BEOn2cAG44ngAG03XcACU
		PxGAGCy3HCgDBQoEgUAG233YAAFL4LMZlM5pNZtN5xOZlCQACQQBAA/H4/gA
		CgSBgABgKAwA7Xg9gAaCuMQArl82gAJw+EAAjDkPJJB4TC4W+n3Z223HABV0
		uV2uDocziTIQ/37OrxebwJ74Mkymk4wRYLRQDAmEa4/sVBJjLwEAXi9H0/zU
		hmBSQKBQA73jUHA44udDCNwAsWA3Yw3XWAAIBAFQX7RAIA9fettt5li5dj9h
		RBOIgqAB4Mw4AFIsGoACeRRKAGAyZG53U8gARh6IQAgzWOQACwTj8W/7JM26
		3nC+3C4nI9zKYzEO2/8WruPp9ZiVywWDmfT6fkYEIQA2f4FQIALFH8xiCscA
		J5HqyY8EgY4AF6YZvAAMYrBgAB0nae4AGWaRzAACYJASABvnEd4ABQEjgpWd
		qCoSni6t2kr6p4hSCxsmbERMd54Q8A4Ds0eh6nyAAuigFoAHCc55gAZ5qnQA
		AKAmlIOAuBgAESOIdAABgFALAzdMaAQBgCcx0HQfM1HWA5CTgNRXlaVpLvtO
		77LIAZAECQJSC0LgtiwDwNoGzKgRomUFnyfUEEaURnowcEVGcaRzgAKQkBS5
		xknCADEAQAAihyEAAEuUhmtY1ykgMoCfKAeB5Q88cyTLGzGUOADYruoSiH62
		IADMLIZgAW5gtQC4LS0eZ6SOz8VC2J0llOWbkieIwTAAO4x2IpaFwPBLdsed
		8fn0cZzHSAxUlQVBQEOQpCjEutwzxerbgZfAIEaRxHFoIojCMHYOA0Cx/tbR
		EcQUx8bNeVZcm2f5Slma6DLuABsm8lo3jCGwAFq08vgWpB0nUegAA8DgHgAD
		YLgaABZF0bCXNoAATBECYASEzRpGrS7dCMIASQ2dh6gAdB1SfX6CA0DAHAAG
		IUgsABUlo+Ykh/oRXFxilCZUOIxBqAAjh2DwAoRBFEzKx54niedzHKc4DGAX
		5gF8Ow6joJ5773k17b9eoKcCDZGEcR5Zh+HwehiDWCH+pUxXAmTxoWx5znWe
		p/kqUpogAZJoREG4Xg20pd5kKglhUABXlxmQpiT1Jpm0dIAVychyniAAUhM4
		IEJ/i5txhBCiAqCgFgAD+mgAZUQgAFQSuCXxiQsNIuhoABOFTSIIgfEwiuvC
		4qBWAAKgiBOzLttMyzPth4n32x0gKZBk/mOi4ieeB3Hd2e//5/gLP/A6IYQw
		iBVhACCD8G4GQMMFQIAhMaCCbILR0SocI7x/inFoNkAAxxmjlNYAMpg2Btjq
		AAHAMoOAACjFcNIAECAPgAGEp0AAMnREGMYOcc51AGgOVCeoi4VnUAAEsKEZ
		YAAbHEAAMgZhI2bAUAADsGxxQoBEBEAAEoHwIo2KIeFyRDCyABHYO0d4+x0j
		pHYAUYgw40h6D0HgK7+R3KXf7HOOgAAIR3AoHoPYfBOhMCYE0JwGAMM4MQyp
		eb6SZwSRyO5IA/xhjMREMhz4AB3DxHwAAaI00pgaAu04bI3ISArBUBhXQ+yC
		DlHQ7gw5KW4HUBqDF0Y6miAABYCiJwPQaHFBsC+UgEgIPmRiAByJNUFoHH8O
		Y6Q/4xDxAGLUWYsxViHgEGceg9B5oqjrNmbTBwDBjDGGQPwXwwhhDsB4DoGw
		CvEAk44pT55Dk3JeQwlxMx7D3MmOsd8l1znUkYkdZg+jYF3hAUwBrIgAAYAq
		SkCoElQgdAyy5Q6OyYxbbQTZyZZFmD0H6OiMwA2SDsHwJ0TgnBDCjFCKAQyv
		1fzapZS0moNgbg3CMG0NobhFg0BsDUFxJyuR3AewY2k7l5l4ovPKiRjSclEJ
		oWKd5OqigBHzVEf0Zh2gCHkZEAAzRmjPGaJISAjw6jOGcM0X9LqzVnJwAutQ
		DgqBVCqG0Kx+A2gmBKCQC4DwHtOryAudgBqJSHYTWhHJMYvFkXmPYfA+B/jw
		HePKqyRQADeG4N0cy7BTiRFaKsVglh7j4Hu32wVobRE2f+BYDwUAoBRDKEgJ
		YSwu10BIVuvB3QFqhKMAgf5mTNRfJujKYJNYvQTJsuCxNAB6j2HsAG46Hh4j
		ySeN0tI3hbXTFCLEWArxOjsu1B60d3bvG2AcA4B4Ewdg7B0EoIIQghhUBaC4
		FwOgNAbA0BQBwDUtAHAMUhXJrSmG0KZPEkhJR+oyH+r4fhdyz4ILOACxM/lm
		AAhwdIaQ0hojFF8L0XwrBjjHGMLceeH5sXfxFiNvwFcTAaBQCkFINAWYtBwC
		MEgJAYKFA0CABoEQIvFASAkBdukxOUbOP4fZZh93IHsPSRg8B2DpHOOYb42y
		0jQGqNQaYyBr5XGYO3LSU8SZdy9d63QB18AMAeAqtYCEhHfJeARA4/LEj4yM
		Pa52Hx5FCH4kfL+ec9Z7z5n3P2f9AaB0FoPQmhbQkBAADwEAAAMAAAABAEAA
		AAEBAAMAAAABAEAAAAECAAMAAAAEAAAc+gEDAAMAAAABAAUAAAEGAAMAAAAB
		AAIAAAERAAQAAAABAAAACAESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMA
		AAABAEAAAAEXAAQAAAABAAAcOAEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFS
		AAMAAAABAAEAAAFTAAMAAAAEAAAdAodzAAcAAAfYAAAdCgAALlIACAAIAAgA
		CAABAAEAAQABAAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgAL
		YWNzcEFQUEwAAAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1h
		cHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAALZGVzYwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3Rw
		dAAAB0wAAAAUclhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAU
		clRSQwAAB5wAAAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wA
		AAAOZGVzYwAAAAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAA
		FEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NL
		AAAAKAAAAYRkYURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5w
		dEJSAAAAJgAAAiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAA
		App6aFRXAAAAFgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAA
		HgAAAyBpdElUAAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tS
		AAAAFgAAA7ZzdlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+Jl
		bEdSAAAAIgAAA/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAA
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "hashnode"
set urlToFetch to "https://hashnode.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "hashnode"set urlToFetch to "https://hashnode.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728685.49162304</real>
				<key>Name</key>
				<string>w: Hashnode</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>233208C8-4A93-43B8-8482-F73054E7C268</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "news.ycombinator.com"
set urlToFetch to "https://hckrnews.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "news.ycombinator.com"
set urlToFetch to "https://hckrnews.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728686.58286798</real>
				<key>Name</key>
				<string>w: Hckr news</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>91ADF247-2210-4743-8628-14D3DE0B94E3</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "imgur"
set urlToFetch to "http://nikivii.imgur.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "imgur"set urlToFetch to "http://nikivii.imgur.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728687.57693803</real>
				<key>Name</key>
				<string>w: Imgur</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>A6375504-6573-406B-9361-9CEE4D1BE475</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		RGgYFPcAAzhgC4ABOCIEgCuS5FSVJWmaMoyDIIh6VBESXA4DoOhOWpaloZAX
		BaFwIKyfZ/k+aLcF+cB4gABoDNY7DLHCd57tE2AAKyhTZx62SB2GAACNfSIK
		gbHJ52CAoCNKPAdg4AAQghSh8HyfIADwPA9keSJIEgOSuEKQpDFKPQ9DyLUN
		AAWxtHaf5TGg3AQSEABqnS7h6xo0aBTglljgFQACn4fQAAscxugABAXBgAFd
		tLgwAEKIoRTjXYAmqaxsnqJwmicHcFQYiAP5aFUmF4ZgSBGEYEnUeh7n+Qxe
		nA9VEHMeFgn3PkyT0w5+gI1gDnseoACMXxTAAY4ZiJQwOhHXIDLoAwB0AIgT
		AiAAtBgDAAn5E4+j8QJMkQQ5DDQiAyjKMw/kyTJLEAALYlEZZyn+XBrHbXIE
		UAcB2zckNkJa2Z+ALHAGnkdlGlMRYAGCGQggAZQbiWAABHxNwMAiBWHxuAB4
		HtFxHikE8XgU/hgGGYhyCcJYlhiefc8khQBFGUpSmELgtC0HZ8H2fR/kAWpt
		gAeZ8q2bh0JUfWib0w3GyGDB0YkOxQkOABnhGFAAFGKg6WYfbwIJYoAAzSYA
		ALZwtBsDQACOFILgCc50ryKInhRCYMmAQtiEAOgMBUXwvxfDVBmDIGYFRtjq
		HiP8QIsBsueNiOgeJ4HqFbSUREug+y3gABMNsZYAA7CmEkjkCKYxAhle+PwA
		iOFKlbfWnADwFD8PWAACoDi0Q7hIBOAEfA+lghoDOGsPiXhQCFIQCGKALRgD
		BF+M0DwHQPgFGCNgvIoRhjiAAdcuQ4h0kqNJB8hqe4bA2GoL0AAbhXCnIKHg
		NgfAADlAwCZZjDViELWqaUDoFAFpHV0AARQVwWGxLkH4PwhBOiEEIIIMhCAV
		yVB1AkXwxQLAVAqAAWQzhyD/FRF8AA9h8ouHc85ZJEjxkCB+2AAAdROh9NkM
		QZoABGBPDAAAX4MgnMXH2sEhh/yBAPAWjgDQE5BrWIEJAMAMAAq7UAIsRYjh
		WB2mwFUhBOwVA4GAL8XoxyfgYAALQZw4h/iplIPsfZlhyDsO4XSNBdU+gYAk
		6QTQbgegAAoPcdwARRhvEaP8TAGgfGyWcpUhyljWvxfbMpOJqwACUDIDIAK1
		VACKEUI0VQd6PBXIQB6kQKYpjAGeCEEAIQDjFGuOcf4mRbDcAAO+VQ7INwYI
		UweHgigyA2AADsFIFgAimGJOgTAuHmD8HssGecw04AQAaAdGoFHSATdMIkMI
		MaFFyD2HsP4mG2iHDSQgjACwIC6F6L0aoOgbg3A0OGCQ/w8ieGcxdZoABvjm
		HkAAfR1zZRoHzK0L4SXxhuCeCoAIkRYDVXyLx5iy29VNIiBV0azFnA4BVJ0O
		oVAXABqW00MYZAzB0FQKYUwjSGCaE2JoXKnAyhGOurEQAnxngAHCduvA5VcH
		/YOQKdhlgYAoAsAASIbAcgAEQKcaAABbjFHCsyZkPCuEgLkCMDwEK/l0DME5
		1oPwXAbACOMcY4h+BNZOEQaN6RgkMCsFcK4bxSikFGJBpJrBWDAG6P8U4uqZ
		AOdMNcbjkiPlyTCkMQYaLjijFvBcYwzziAGNQg59gGQMLRASjE1szBKhzB4n
		EBLWhbC3FwNkKYUgpg1JOSkhhMAKAdF2LwXQ0QYAvBiBEelSx/h+EyMwAA4n
		pAAHasAAFgTqBRa+AAaQ23JDUG0bjCCgErkCNgXQDIF1okbNKFkIwJAABPB8
		COIkRgABxDgHQQomBLiXjsRNA4bxGCQEeI0ObejSjGGkOYf4jRRXLAoBMuA5
		2bgAbOZYvB3AC4ROKVlOCcAXP4AAPIei4QQgcAcAAQ4bAcWWNgMUZAyx1BSS
		0DUdWo4wETTEA8CwrRXCuGQEMIQQgQr0FiMAb4/xOCuGorkBSOCjrhHQOuMz
		GUAECukQ/AaLwHlwAuBU/A8R5LhBICC7AfQzA1ABZQBYASjjvAAGgNAaw5Cp
		FQKgR5xQa1tCQKsVYqRYAfixVJMgABXC+vyLAXrEh1o6Ret22w5URTylLKY0
		SzjzGWAQAc+migAbubCPKm4DgH1SA4Bc/AdgxAyAABcCYDQAtDRcJISYlRYh
		3DqHUKpIR+ouyillLbdhMCWAwBcDGwl/jcHWrIV41QAaATcOwdrTQNAY0qOL
		fyNehAAHMOevYHQNpjf2SoB4DkhtJNKEYHYIAABbCdHp+IBWzJmAAKQUoqBi
		hvOSFEeXaU1ZRIQYkJYYBGiQEaJIFIJgTrRj6vQZg1R1D/GEMkcgABxjmJUO
		UdRKuDn0JIi4CPUp+ARSGDAFSkAhA5A74/bJBB7ebAAJ4TwoBbh8D4HsMA8f
		TG47YQ+bgOPRB8EcFAKATgcoXkGQYuR5lYjzHow4e6NFrF0AWAo+nwQDmxyg
		QUrY0RqDVHmJQSIlBGm6E+Ihs4/Fw+pJbfUBASgkhLC4FwMAXAzg7B0DoGWV
		QLZTNYRIuQ8x6kqGyNgbI6xYixFmLG+IpBJDf/4NP7D/5ZQiwFInYGgGoGwG
		oICSoFYGIDUBoDgBQjABQfidgfod8CwdgbkDIbQZ4ZwZ4YwZwZwZoYQ4Qdo4
		kAEE4wyyIAbRRg5xUFEF8GEGIlogIAAADwEAAAMAAAABACAAAAEBAAMAAAAB
		ACAAAAECAAMAAAAEAAAvDAEDAAMAAAABAAUAAAEGAAMAAAABAAIAAAERAAQA
		AAABAAAk4gESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABACAAAAEX
		AAQAAAABAAAJbwEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFSAAMAAAABAAEA
		AAFTAAMAAAAEAAAvFIdzAAcAAAfYAAAvHAAAOhoACAAIAAgACAABAAEAAQAB
		AAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgALYWNzcEFQUEwA
		AAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZGVz
		YwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3RwdAAAB0wAAAAU
		clhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAUclRSQwAAB5wA
		AAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wAAAAOZGVzYwAA
		AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAFEdlbmVyaWMg
		UkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NLAAAAKAAAAYRk
		YURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5wdEJSAAAAJgAA
		AiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAAApp6aFRXAAAA
		FgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAAHgAAAyBpdElU
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "jsfiddle.net"
set urlToFetch to "https://jsfiddle.net"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "jsfiddle.net"set urlToFetch to "https://jsfiddle.net"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728688.56087995</real>
				<key>Name</key>
				<string>w: Jsfiddle</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>F669380D-B423-42E8-BFC4-4CFF7A610997</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "kaggle.com"set urlToFetch to "https://www.kaggle.com/discussion"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "kaggle.com"set urlToFetch to "https://www.kaggle.com/discussion"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728689.65231705</real>
				<key>Name</key>
				<string>w: Kaggle</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>AC4B54FF-C1AF-4382-9B1F-D12363CDF2E3</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "khanacademy.org"
set urlToFetch to "https://www.khanacademy.org"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "khanacademy.org"
set urlToFetch to "https://www.khanacademy.org"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728691.00145996</real>
				<key>Name</key>
				<string>w: Khan academy</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>534D3B1D-7462-4345-8417-BFA14896990D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		TU0AKgAAHECAACBQOCQWDQeEQmFQuGQ2HQ+IRGJROKRWLReMRmNRuOR2PR+Q
		SGRSOSSWTSeUSmDgmWAwLy8OhqZCEKBUKh0IhAJBUFAsEg0BgIBgN+0V+vV7
		PV5PB3vF1090uNzVNvumrON8Vl6yquV2vQ4P2EUDQajUhjQZjQhCUTCYYBYL
		hYNA4Hg8EAkEAgAAUCAQAAEBAG/4N/4UAUYAPuigB8PZ7gB5ZF8VZ0uRt5do
		MxlsxfMxmMpeuPRNqv6XTRcFakHD4fD8nEklEkvC8YDAdBncAvdAoAXkDAAD
		cEAAe+P+hAMAYHBAHmQnCv/D4Z+dMAPp8vsAvl8vgAPd8PoAPWkADKPRoedi
		LdarZRMNhsJZVl8VvT/WuywEgwlkwmGEqCqKo1BWFYWBQCQIgeAAGAW3iegS
		f4CKGwSBue6CDueiLmQmgbmwmwUKn3ELIHmeoAnoeh7AAeB4niABrmsaxqlW
		VRVEmW0blG7R8xS+0eo4Hgeh6J4zyIQIZBmGoXgkCQHABBAHH+A4DgNDYAQr
		DCISqh8LQzDsNQq8R7H+dp3HgAR4HkegAGgZpnGaTE4D8ZBkGMW0fTuhoIT0
		Co1DUNhDigKYpDGDYMguAAJgmCEouCAMrsMhENw05ctoFCx/w8waHUvCqFuU
		5bBHnE5+nSdZ2gGdh2HefpXFYVZNEwS5Lj2edanfPEfBTXQaj2Po/E6G4bBs
		FoLAqCQAAcBwGStR6E0/TSCHcfJ+H+bh6H2ABvHk8B0HxbB2Wm6p+oEfJ/Og
		A7AuGoNEXQAAMgSAoABCBt4hKBi9AjdEtQtc1IIMAWAUdftSnYf0yHgAZmGb
		NpCECQIxm5iJoVwrrWB8KI+D8QBOBQFASAkDALAof4C5KAJ/ZRLiC2e5p4n0
		fp/mSdcUmKdMUm2eLHw1ZiBW3cYQrsABuHg7ggA2BoAGOdE1AcAy/HqxUFAK
		5AJAO5B0nu8ATAeA4AB6DGkBuCoE6kAcPuhfuVZ3ScSHqfhynKdICHCcJxnW
		QA/D4ME5mRO2KJEI/Ai4PpAECTYRBADwEAwC+RoJLEOQ8wAAne65/lmcJ5gA
		YZz80cZ5vADIGN+AjAakAQABSCWyFobx3AAI4PggABcnCeAADAFNDlKbZ1gA
		GgK2Wa54RSG4LWWeh+H8ABgHHFoOgcvRyHm7gLAVeIjA9BIl+gAAHgMwNm5X
		gJ9RCfpwHEcgAnOcx1HuQI/j8MJfl+XxV7+jQhf0KxBkMQwogSAiBCAdYqx1
		HsqOScoww/xbDiHkAAV43nbu2HyAAIoIHZjnHseAdTUAAAzeOAAZQ6U1BSY+
		AAUY1h1AABq6IAAzx0lbC6CkCoABSjYd8W9pA0h2FbCyCcCYABbjgduYo6AK
		wJm8GKOaB4Oi5gAF8ON24FwFG/C2CiIIRgNgMSq2kgik2UD+H6N8cI5B/jlH
		MOkfYew9B4CwMU9wsn8ERNqDAHwjhJCSFoCsE4JQGgWZElZlMCCBMAMCzMfY
		/xLjThWMQccDwNvRAAB8BzXRyj0PAEQDzsxRDUHSABYiyxsDuK2FoFAFgACs
		G0OwxjyloBDdkAAYI5EWr9AAARdIYgWAYAAJgaQ5wAAlAibwdw91sPQa7FRe
		ItRuOvBEBI3g3R3IpBwBpZYbC3gAAkAh0sg4voajCP0b0ZB/t0HIPQN4bg2h
		IRgNYZMcyESAAsB1OAmRhA3BwDYEAGmQpWWY5CQrARrTTH+IYYw5QAALOIAA
		EgEWyC7G6O0AASgSAUAAMkc6LQnAlosL52wAByjxO4usAADQDl+g28tmDy3H
		oWObP4gTpXUARAQvEdg94KnMdQ6ggQYwYS8FINSFYH2gvXdQNFpYAGwNdH2y
		gAAdgbAaAACamjJ2UkEU+Ps6Y/BtjeHCAIaY0RqjdDWGoM4Ph21pHRHOQwBB
		DiIEUK8KwVgqBMA8B0DKmDm0AgSYEZbSx/iOGQOZJz1wAPOMeGEF9UheDgVu
		OgecFSCOjOQzA6A8B7j8Wg8s6DqEtEUlscqmFJaTgABFQ6F454HgwAyk0aVk
		AABVBVKhz8FRgDeVu8c34eAdAbAAC8CwC6rLmqwwFto+26DlAKLEWAsBVh8D
		2HsLBA6WJ3CeFEKIaBCiEEKJcEIIgOj/AUXm4bKpDABGjB0f4hBhDjABKRbA
		PIMAAWoQKxyKQqAqUOJ8Z9CHlHQUhS9ShpsAAAuIABsxgqmvLB8CBY7Rzfik
		GhWsG8sRzPURUPZbAhghggAACoCgCry3FbMOgqw+ByPtAQH4PQewvi3FwexH
		pNgKgcE6KEUIywcg1BoBgCgFAI4GquQNgIAXnD6H+HIXA3HfgbdmtuzQyBwq
		3BaBhJo2x2lbeivEeq4R+MwngQxLgMwOOztfA8EADl4gYAebwYTrpJgTbIdd
		5YiAighqUAwAtVjCs7IINsbg4B+DVGsNgdAYwwhfBoO/RkKzShvDeHESOkQ3
		BuA+TGvTZzoM7H1fUPYvBvLZHcdzL50AvAzt8NWDoABiDeokUF1DaFoU6zCQ
		gf7yx/ACL8P8fh4ASjcGaAAdgKAZmQZIAAKSxDEyuFUNGYANJNgAEPneW9PE
		MXnVEPQfI3hwDlAOJgSwlhEqxEsHgroG90AjFCKIUYzi0AvLoA9JsYbzMBE6
		M0cw/xRjLmAEUE8qFr2aGnSEAAS79RQG5RIeS3loa1IaP4Aa8QDD6RSEwWgn
		QADMBgD0AA4QRAwAAFoF0qB1baAALaFVpgKALwytgKnIwABbBgBfEeRGAzjH
		EPkbI2lrBgC8F0GI6uhXuJOGlPoiQ7dJDsB8DwGmVbXYCNsdiYhDi+HEuJcY
		4x3mPBdE+KR3B6cMKDZ/hxCx+gEN+AwerrwzieEKAAaIKAYgAF0EcLxvR9wV
		Ak6MAA52iAAn1kECFNYoO9OGAV1AlgpApAABx7+fDjMBHoeIfI3RvjjAOJMS
		AkRACdE6JwQJJAGejAgKAUQpBpBBCADwDqB0E70UkwEPwuBvD/GparmOZOO9
		/F4NiFbL3l2e7KRAfYBmugWHQN8AAcxNiDAAOYCsqBKBmEMX8ftmlHNoMN2N
		ZHhB66dAAEME0qKIlbycb8PYQwQsCltQEwOgBvj6GaM8aA4QwheC8DE+R9CP
		BA/8CmEoEqEsFYBMBKBAQgL6n+r6ACGyvUD+FuG6wQXSHQswAACABMhqpqdQ
		FwGqk+kM+GIW+KL0BG2A+WE8EYMOXSD4DoEcAAHoAYiCAEjEISKKeWBYA6dm
		CGBKWOGgem1YoiL2bMAAEuCuBWkmqq3ovOHYTIHu24HGAQnSDcCYToTqJAD6
		D6D+FGDQDSDOC4A0Ayhq3ouKMCEcF+HAgYGkk+B7AwIKGCGyd8XTBAIUr0vo
		AML0BoGaF0AADWFME0oSg2AAD+DcDuRcBQB2L2H0MeIYwOBIAuWWHWsjBcHw
		s0BWA0QSHClIAACMBUhqDS9YvKUmq2H2GyG2G+AKFHFQE2EUEQEQDMI4PwAY
		FGFKFKGmCGCEB+gw3kyEXMU+siWoDqFeNIpSAAHEHYTUQi1igXDkUiMEH64i
		gsGEFSAADCVcAAN4gqE+CWCgAAFgCQDKluH2O4IoH6uIAMXWB2BKiDEgPAGq
		4IA2dWAAE8C4BaOAlxAUvOG424HyGUGUGaG+0S/yH1IFHEIsBOBOLGFCFIFI
		GQBeBaBSAGSmAKU6vOGOG+HeH+ESFrAiCSBel4y2Wyh6lk98MTHI4a1q1yOQ
		AEH+XGCqFuE2AACmF6F6luwMouBWBQAAEaDAEAMOACL8YEIyS4acdQA4Ak5Y
		BYaOAAGKywAAD0ooAABke0vKvOHOHQHQHsG1FKAEDEDADCBqG8G8G6GoIwCW
		CaCaDGEfLSE4BGBCvCZ26gMCE0GGHCH+FgGYmA+AOHHsA+AoWWG6HUc0OuXG
		7IVw7OXiASHwc0DGFgEk/CGYGevoOSveAi5YD8DNJ4HUAqw8AE17KCQsAiXu
		AACoBqt9GMgrHageGuloAADGCAzwDAB0A5KmYCMieoG0G6HCAQD0DuDuC0F2
		F2F0FOIwDWDYDcEaDyDyDuDkA2A0lQ9gckMCDkFQGoH+7CeWBHEcAAG2HRNT
		NWams9MIPsQsH4AKN+AmHeoQDYFaEiAABjNuMYL3JoeWEYC0DGaSBkCUL2Hz
		EVPCIkQsYAIEUov+AAAgAWN+S4BVKSEOvy+ywOOYRCRCGxFKAKEoEmEmEKE2
		EyEyD4IwEKEOEOFaDKDIDGCkAqyBF2OMQ0WmXMDIE7MhGKK2X8Q45sQmkIK+
		S4MEH0AKa6BAHIGsAADiFcEmkmHMd8grMOMTG4B3EOFACYDeluH6WwtGJCOg
		zAt+wcSdQNO0HQRbO/HiDIBlAkS0jCH9QkG6ACFUFSFYFQEEEAD+C2IwEsEw
		EyGGCuCsCmB49dRQyKHSHiHyH+DyFSGrAs4OIJMEiEGgsIHZT8OTP6K6kSME
		BcG6neDgFkE+ScHkK2PAL8N+s0G2A8AyAAEEC6D+MYAQWWADJKJQL6dQXgL8
		ZNHqOQy+eWE4DLTCAgeuZOOeZ252G8H4FwFyF0GCDinSCKIoKGKGE4E+FAGa
		CgCcCUBeAhF1CSOUHC6mH+DGEuGYMSqaAAASaspKsMHg++AAHyH0eXUcJQWw
		dQB4AUc0DcEUDsluHec0s0XidQeWH0AEXiD8DEDmAAG6A6BcluH4skJPHJBt
		SwB0BOhqO+s0HckwAAGMGylYEuDK5AA2oc8gvPFIG6HyGAGAGIGgDQDMDIBw
		IoZLR2E+FEFEGeCYCSCQBSLqWXWoOYG0HOHoH+D7OmlAA8WOy+XGGMGud8g3
		XWpeNLBq8ahCEwDRZOAUFkFe2EDKD0SsHmRSbIIEEsCTG2FsBuumAKH2R5JM
		JUwAX4X4uIAW8IE6DYBqkmxDY2YCG4G6HAH0PcGKGpRGDEBrTIIgL67RZW3a
		CYCUCQBXWlZoZSyKG8vUDIEknfRXTEMPJKYDQDRuQs+4ESDABoAABwo4UcIG
		HwF2F4H+HyC6DYAAF6AmqkEgChEIZ4UsNOKKOgA+bAAABZZ8PC4YGhCAEuDT
		baA+bHbg/eG4G+HyGGGIGNbwDFK8U6IkAEE7WWGUCkCgCaBmT03ncRWqZmH+
		D0FGGkAABcBCWOAVXBS8FkGQ6uHiy6L/aOJMRCs0C+CNJwDUCQBM/YX8vOGq
		FsGGH+DqFlAiHgAjVDBkXGNOMNbSN/QAO6XCfKeWAdS0FEDiByAAAsAgAPeC
		ADKyG8H1JkGAGWDVC4B4IwEgEkEmF4C2C0CwCGAoUVT2OUHekwH+DYEwGdUa
		IEHsOuOrW6HjYjHI03XSI006XGBgoqAAEmDPZOacQ3h8MCGOhwvWFXUGHcHi
		RSAGwCPrdig+BQhqBqo5fWIFAoO4GVJGFADjZOAYpPc8U6H/gycuFoFsFwDs
		DoDmCYIwV6D8FEDYDYDSC6ZCotOe00dwEgGRciIEA4xDO0HKgeHPGNUap4JA
		QmjDXCN+EuDaB0AABGta+yz6Q0FmGUHGH+EaFWGmMYfKwQKHdeTvkgqclsam
		OQZKdQBGieE2DcBvBoKNV6AGxwFGE2EXFWDOIwDADADEY1TaECA8A4AxeY5s
		bMEAFIGiH+GmscAAHs4YTQgrcnRlRsI1ixN67mCkB0A+bPQCMEE6F0G2H+E4
		FrR+UhDijmUg+4B467JIeWGelWAAB8p+AAEAC2BeqsZgUmHwO0H054HAAMEV
		Q+DqFNoVBQIuB6B+B+CgViEwFeLaBCH+1hHuKEACFMF+G+H+EmFbLGBUBCiC
		BcBGWOfKXGFezeJDXMeWCQBwA8AAEKDABmVA2WXMEaFblGFcF+1CAGdLi8ng
		UgQQL1fGptAqAipNBcw0AADQCg8YCmB2A9n88iMCHcTKHuG3NxCgDcDYCSGS
		TmFyIwJkA0BGFKFOFOGiBsBoBiJ8JYOe+CoEdsH+E0FmNIA0Aq5YGdYo+fkY
		RCurm3JKA2ysAAE6DoB8m0kqACHkw0H+EE3aAAF+GYvcacORDkltDA5YCUwq
		OBHMAAGmmkABr4k+FAD1sSA+ePNmMCfSHKHuGsGuG0HwC8C2C2BcKeHWHIIw
		raEyE4E6GNWcCYBrhWdnj/dcDCESGGAAG0iJKgBSlRYcAAGlr7cncmIg1uOg
		QkAAEYDZhCByBYAsACHMHaTED2E4GVulJGODsvbHBAwKH2Zem0mGAAA7OyJ8
		L8EkDblqIYGzHyH6F8F8GAGQDWDQDQB+uoI4DMDMDOEKxaD0D0rurypas7o0
		FOF6G6H+FqGKvcL6MEGumaURHgtEVMRTgSIZIEXGDACfCMDaCmBYACGtroD4
		E1kGjKRaAManGWIRpTgmAm5YBznltCd9FKVuECDRbaCevlqqvOHtyaH0q6HE
		AMEeEYEaD4xwFA7eI+Y6BQBrcAGMBcBYBOAILwARImOUHgWuH+CwD6F2MgHk
		WwCMB2A+AABQA8yCFWF8G2sPkSgTPCq1iEd0AAE4DyCDYkGmk+Y2ne0YMeAI
		8RlRDkwKJ8N+CeCCBGeYGdt0HcHeO4BIliRIPAE8D1wPvvoybMxSHOHuG7bm
		ACDEC+DABsnGG7lGI/WQAGEmEoEsGCCiCmCcB2AxRNRQxIACE2FkGwH+G9B8
		IIGEGY6uSkL8RQPApgZ2quAbqWFEEDWNnqlYESE9W2O+WwKG2tx0IRkiBBBw
		AACeB/0sG+iYAAFaF0NIDqDDTCC2CMBLqr2mjDKy+UF1dCGBWIDcCLmUJCCO
		CSNkEd4QFCgCA+ZIL5AUZ3mos0C8EAF8AAHQ1WCQB6zwGuzgGwG6lYAgAaL1
		2hdcD5iOABh2gqEmFNMgphut3GIJki1KAAA8A2QToCs0HYmmlA3+lvCEEmDr
		hCAQfBoykOTIHwuSARjiDoCqfoF8FYJQLyAQAWE2E8E+GUCMCICEtmWN2DmW
		ACGEGcHOH+EoFTe8HoaypA9wCwCUBUO6HwXGFgF6GyAACT3UScAabIFUFwGv
		z7Ubh+4daSBTi73CWyymomB6BEhfDfYBEwAAEyD8CEd+tn3wr2OfgyH8GOGQ
		GWGmDODKDGB1QhIIJSCQCQCSC6EWEaEYFEBKBH4YODQOMMwEACbMEaFIGe30
		FhR+DICoBeABhePAFnzyAAAomh+ItQGiGsrXPLJ+QpBBiUkIlsAbS0DMCs5A
		GBsoheGorWAgkkCoCMBJqcCpxeMKstP/o0MoHwHEbiAQDvjl6afp6gNLWQAK
		EejyF0CgCeCaCAA4IAGgy/wAAII/4QAADCwA+35BEOn2cAG44ngAG03XcACU
		PxGAGCy3HCgDBQoEgUAG233YAAFL4LMZlM5pNZtN5xOZlCQACQQBAA/H4/gA
		CgSBgABgKAwA7Xg9gAaCuMQArl82gAJw+EAAjDkPJJB4TC4W+n3Z223HABV0
		uV2uDocziTIQ/37OrxebwJ74Mkymk4wRYLRQDAmEa4/sVBJjLwEAXi9H0/zU
		hmBSQKBQA73jUHA44udDCNwAsWA3Yw3XWAAIBAFQX7RAIA9fettt5li5dj9h
		RBOIgqAB4Mw4AFIsGoACeRRKAGAyZG53U8gARh6IQAgzWOQACwTj8W/7JM26
		3nC+3C4nI9zKYzEO2/8WruPp9ZiVywWDmfT6fkYEIQA2f4FQIALFH8xiCscA
		J5HqyY8EgY4AF6YZvAAMYrBgAB0nae4AGWaRzAACYJASABvnEd4ABQEjgpWd
		qCoSni6t2kr6p4hSCxsmbERMd54Q8A4Ds0eh6nyAAuigFoAHCc55gAZ5qnQA
		AKAmlIOAuBgAESOIdAABgFALAzdMaAQBgCcx0HQfM1HWA5CTgNRXlaVpLvtO
		77LIAZAECQJSC0LgtiwDwNoGzKgRomUFnyfUEEaURnowcEVGcaRzgAKQkBS5
		xknCADEAQAAihyEAAEuUhmtY1ykgMoCfKAeB5Q88cyTLGzGUOADYruoSiH62
		IADMLIZgAW5gtQC4LS0eZ6SOz8VC2J0llOWbkieIwTAAO4x2IpaFwPBLdsed
		8fn0cZzHSAxUlQVBQEOQpCjEutwzxerbgZfAIEaRxHFoIojCMHYOA0Cx/tbR
		EcQUx8bNeVZcm2f5Slma6DLuABsm8lo3jCGwAFq08vgWpB0nUegAA8DgHgAD
		YLgaABZF0bCXNoAATBECYASEzRpGrS7dCMIASQ2dh6gAdB1SfX6CA0DAHAAG
		IUgsABUlo+Ykh/oRXFxilCZUOIxBqAAjh2DwAoRBFEzKx54niedzHKc4DGAX
		5gF8Ow6joJ5773k17b9eoKcCDZGEcR5Zh+HwehiDWCH+pUxXAmTxoWx5znWe
		p/kqUpogAZJoREG4Xg20pd5kKglhUABXlxmQpiT1Jpm0dIAVychyniAAUhM4
		IEJ/i5txhBCiAqCgFgAD+mgAZUQgAFQSuCXxiQsNIuhoABOFTSIIgfEwiuvC
		4qBWAAKgiBOzLttMyzPth4n32x0gKZBk/mOi4ieeB3Hd2e//5/gLP/A6IYQw
		iBVhACCD8G4GQMMFQIAhMaCCbILR0SocI7x/inFoNkAAxxmjlNYAMpg2Btjq
		AAHAMoOAACjFcNIAECAPgAGEp0AAMnREGMYOcc51AGgOVCeoi4VnUAAEsKEZ
		YAAbHEAAMgZhI2bAUAADsGxxQoBEBEAAEoHwIo2KIeFyRDCyABHYO0d4+x0j
		pHYAUYgw40h6D0HgK7+R3KXf7HOOgAAIR3AoHoPYfBOhMCYE0JwGAMM4MQyp
		eb6SZwSRyO5IA/xhjMREMhz4AB3DxHwAAaI00pgaAu04bI3ISArBUBhXQ+yC
		DlHQ7gw5KW4HUBqDF0Y6miAABYCiJwPQaHFBsC+UgEgIPmRiAByJNUFoHH8O
		Y6Q/4xDxAGLUWYsxViHgEGceg9B5oqjrNmbTBwDBjDGGQPwXwwhhDsB4DoGw
		CvEAk44pT55Dk3JeQwlxMx7D3MmOsd8l1znUkYkdZg+jYF3hAUwBrIgAAYAq
		SkCoElQgdAyy5Q6OyYxbbQTZyZZFmD0H6OiMwA2SDsHwJ0TgnBDCjFCKAQyv
		1fzapZS0moNgbg3CMG0NobhFg0BsDUFxJyuR3AewY2k7l5l4ovPKiRjSclEJ
		oWKd5OqigBHzVEf0Zh2gCHkZEAAzRmjPGaJISAjw6jOGcM0X9LqzVnJwAutQ
		DgqBVCqG0Kx+A2gmBKCQC4DwHtOryAudgBqJSHYTWhHJMYvFkXmPYfA+B/jw
		HePKqyRQADeG4N0cy7BTiRFaKsVglh7j4Hu32wVobRE2f+BYDwUAoBRDKEgJ
		YSwu10BIVuvB3QFqhKMAgf5mTNRfJujKYJNYvQTJsuCxNAB6j2HsAG46Hh4j
		ySeN0tI3hbXTFCLEWArxOjsu1B60d3bvG2AcA4B4Ewdg7B0EoIIQghhUBaC4
		FwOgNAbA0BQBwDUtAHAMUhXJrSmG0KZPEkhJR+oyH+r4fhdyz4ILOACxM/lm
		AAhwdIaQ0hojFF8L0XwrBjjHGMLceeH5sXfxFiNvwFcTAaBQCkFINAWYtBwC
		MEgJAYKFA0CABoEQIvFASAkBdukxOUbOP4fZZh93IHsPSRg8B2DpHOOYb42y
		0jQGqNQaYyBr5XGYO3LSU8SZdy9d63QB18AMAeAqtYCEhHfJeARA4/LEj4yM
		Pa52Hx5FCH4kfL+ec9Z7z5n3P2f9AaB0FoPQmhbQkBAADwEAAAMAAAABAEAA
		AAEBAAMAAAABAEAAAAECAAMAAAAEAAAc+gEDAAMAAAABAAUAAAEGAAMAAAAB
		AAIAAAERAAQAAAABAAAACAESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMA
		AAABAEAAAAEXAAQAAAABAAAcOAEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFS
		AAMAAAABAAEAAAFTAAMAAAAEAAAdAodzAAcAAAfYAAAdCgAALlIACAAIAAgA
		CAABAAEAAQABAAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgAL
		YWNzcEFQUEwAAAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1h
		cHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAALZGVzYwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3Rw
		dAAAB0wAAAAUclhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAU
		clRSQwAAB5wAAAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wA
		AAAOZGVzYwAAAAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAA
		FEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NL
		AAAAKAAAAYRkYURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5w
		dEJSAAAAJgAAAiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAA
		App6aFRXAAAAFgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAA
		HgAAAyBpdElUAAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tS
		AAAAFgAAA7ZzdlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+Jl
		bEdSAAAAIgAAA/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAA
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "forum.keyboardmaestro.com"
set urlToFetch to "https://forum.keyboardmaestro.com/latest"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "forum.keyboardmaestro.com"
set urlToFetch to "https://forum.keyboardmaestro.com/latest"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728701.81153798</real>
				<key>Name</key>
				<string>w: KM forum</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>C49258E4-BB4C-4F3A-A842-882706844179</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>Conditions</key>
								<dict>
									<key>ConditionList</key>
									<array>
										<dict>
											<key>ConditionType</key>
											<string>Text</string>
											<key>Text</key>
											<string>%SafariURL%
</string>
											<key>TextConditionType</key>
											<string>Contains</string>
											<key>TextValue</key>
											<string>learn-anything.xyz</string>
										</dict>
									</array>
									<key>ConditionListMatch</key>
									<string>All</string>
								</dict>
								<key>ElseActions</key>
								<array>
									<dict>
										<key>DisplayKind</key>
										<string>None</string>
										<key>IncludeStdErr</key>
										<true/>
										<key>MacroActionType</key>
										<string>ExecuteAppleScript</string>
										<key>NotifyOnFailure</key>
										<false/>
										<key>Path</key>
										<string></string>
										<key>StopOnFailure</key>
										<false/>
										<key>Text</key>
										<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://learn-anything"set urlToFetch to "https://learn-anything.xyz"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
										<key>TimeOutAbortsMacro</key>
										<true/>
										<key>TrimResults</key>
										<true/>
										<key>TrimResultsNew</key>
										<true/>
										<key>UseText</key>
										<true/>
									</dict>
									<dict>
										<key>KeyCode</key>
										<integer>9</integer>
										<key>MacroActionType</key>
										<string>SimulateKeystroke</string>
										<key>Modifiers</key>
										<integer>0</integer>
										<key>ReleaseAll</key>
										<false/>
										<key>TargetApplication</key>
										<dict/>
										<key>TargetingType</key>
										<string>Front</string>
									</dict>
								</array>
								<key>MacroActionType</key>
								<string>IfThenElse</string>
								<key>ThenActions</key>
								<array>
									<dict>
										<key>KeyCode</key>
										<integer>53</integer>
										<key>MacroActionType</key>
										<string>SimulateKeystroke</string>
										<key>Modifiers</key>
										<integer>0</integer>
										<key>ReleaseAll</key>
										<false/>
										<key>TargetApplication</key>
										<dict/>
										<key>TargetingType</key>
										<string>Front</string>
									</dict>
									<dict>
										<key>KeyCode</key>
										<integer>2</integer>
										<key>MacroActionType</key>
										<string>SimulateKeystroke</string>
										<key>Modifiers</key>
										<integer>0</integer>
										<key>ReleaseAll</key>
										<false/>
										<key>TargetApplication</key>
										<dict/>
										<key>TargetingType</key>
										<string>Front</string>
									</dict>
								</array>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>Conditions</key>
								<dict>
									<key>ConditionList</key>
									<array>
										<dict>
											<key>ConditionType</key>
											<string>Text</string>
											<key>Text</key>
											<string>%SafariURL%
</string>
											<key>TextConditionType</key>
											<string>Contains</string>
											<key>TextValue</key>
											<string>learn-anything.xyz</string>
										</dict>
									</array>
									<key>ConditionListMatch</key>
									<string>All</string>
								</dict>
								<key>ElseActions</key>
								<array>
									<dict>
										<key>DisplayKind</key>
										<string>None</string>
										<key>IncludeStdErr</key>
										<true/>
										<key>MacroActionType</key>
										<string>ExecuteAppleScript</string>
										<key>NotifyOnFailure</key>
										<false/>
										<key>Path</key>
										<string></string>
										<key>StopOnFailure</key>
										<false/>
										<key>Text</key>
										<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://learn-anything"set urlToFetch to "https://learn-anything.xyz"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
										<key>TimeOutAbortsMacro</key>
										<true/>
										<key>TrimResults</key>
										<true/>
										<key>TrimResultsNew</key>
										<true/>
										<key>UseText</key>
										<true/>
									</dict>
									<dict>
										<key>KeyCode</key>
										<integer>9</integer>
										<key>MacroActionType</key>
										<string>SimulateKeystroke</string>
										<key>Modifiers</key>
										<integer>0</integer>
										<key>ReleaseAll</key>
										<false/>
										<key>TargetApplication</key>
										<dict/>
										<key>TargetingType</key>
										<string>Front</string>
									</dict>
								</array>
								<key>MacroActionType</key>
								<string>IfThenElse</string>
								<key>ThenActions</key>
								<array/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728712.52018595</real>
				<key>Name</key>
				<string>w: Learn Anything</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>DFEF69FC-A9D8-45FB-811D-F60C8BFEFCF8</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "leetcode.com"
set urlToFetch to "https://leetcode.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "leetcode.com"
set urlToFetch to "https://leetcode.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728716.00177705</real>
				<key>Name</key>
				<string>w: Leetcode</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>28D93A02-C8D5-45CF-9440-E7603346BCF2</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "lichess.org"
set urlToFetch to "https://lichess.org"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "lichess.org"set urlToFetch to "https://lichess.org"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728717.00177097</real>
				<key>Name</key>
				<string>w: Lichess</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>19F9CE5E-ED9D-4321-953D-047325C50A8E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "lobste.rs"
set urlToFetch to "https://lobste.rs/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "lobste.rs"set urlToFetch to "https://lobste.rs/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728717.98626304</real>
				<key>Name</key>
				<string>w: Lobsters</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>3031D6CD-F179-46B8-B3F7-7394522DA633</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>Conditions</key>
								<dict>
									<key>ConditionList</key>
									<array>
										<dict>
											<key>ConditionType</key>
											<string>Text</string>
											<key>Text</key>
											<string>%SafariURL%
</string>
											<key>TextConditionType</key>
											<string>Contains</string>
											<key>TextValue</key>
											<string>localhost</string>
										</dict>
									</array>
									<key>ConditionListMatch</key>
									<string>All</string>
								</dict>
								<key>ElseActions</key>
								<array>
									<dict>
										<key>DisplayKind</key>
										<string>None</string>
										<key>IncludeStdErr</key>
										<true/>
										<key>MacroActionType</key>
										<string>ExecuteAppleScript</string>
										<key>NotifyOnFailure</key>
										<false/>
										<key>Path</key>
										<string></string>
										<key>StopOnFailure</key>
										<false/>
										<key>Text</key>
										<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "localhost"
set urlToFetch to "http://localhost:3000"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
										<key>TimeOutAbortsMacro</key>
										<true/>
										<key>TrimResults</key>
										<true/>
										<key>TrimResultsNew</key>
										<true/>
										<key>UseText</key>
										<true/>
									</dict>
									<dict>
										<key>KeyCode</key>
										<integer>9</integer>
										<key>MacroActionType</key>
										<string>SimulateKeystroke</string>
										<key>Modifiers</key>
										<integer>0</integer>
										<key>ReleaseAll</key>
										<false/>
										<key>TargetApplication</key>
										<dict/>
										<key>TargetingType</key>
										<string>Front</string>
									</dict>
								</array>
								<key>MacroActionType</key>
								<string>IfThenElse</string>
								<key>ThenActions</key>
								<array>
									<dict>
										<key>KeyCode</key>
										<integer>53</integer>
										<key>MacroActionType</key>
										<string>SimulateKeystroke</string>
										<key>Modifiers</key>
										<integer>0</integer>
										<key>ReleaseAll</key>
										<false/>
										<key>TargetApplication</key>
										<dict/>
										<key>TargetingType</key>
										<string>Front</string>
									</dict>
									<dict>
										<key>KeyCode</key>
										<integer>2</integer>
										<key>MacroActionType</key>
										<string>SimulateKeystroke</string>
										<key>Modifiers</key>
										<integer>0</integer>
										<key>ReleaseAll</key>
										<false/>
										<key>TargetApplication</key>
										<dict/>
										<key>TargetingType</key>
										<string>Front</string>
									</dict>
								</array>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>Conditions</key>
								<dict>
									<key>ConditionList</key>
									<array>
										<dict>
											<key>ConditionType</key>
											<string>Text</string>
											<key>Text</key>
											<string>%SafariURL%
</string>
											<key>TextConditionType</key>
											<string>Contains</string>
											<key>TextValue</key>
											<string>localhost</string>
										</dict>
									</array>
									<key>ConditionListMatch</key>
									<string>All</string>
								</dict>
								<key>ElseActions</key>
								<array>
									<dict>
										<key>DisplayKind</key>
										<string>None</string>
										<key>IncludeStdErr</key>
										<true/>
										<key>MacroActionType</key>
										<string>ExecuteAppleScript</string>
										<key>NotifyOnFailure</key>
										<false/>
										<key>Path</key>
										<string></string>
										<key>StopOnFailure</key>
										<false/>
										<key>Text</key>
										<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "localhost"
set urlToFetch to "http://localhost:3000"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
										<key>TimeOutAbortsMacro</key>
										<true/>
										<key>TrimResults</key>
										<true/>
										<key>TrimResultsNew</key>
										<true/>
										<key>UseText</key>
										<true/>
									</dict>
									<dict>
										<key>KeyCode</key>
										<integer>9</integer>
										<key>MacroActionType</key>
										<string>SimulateKeystroke</string>
										<key>Modifiers</key>
										<integer>0</integer>
										<key>ReleaseAll</key>
										<false/>
										<key>TargetApplication</key>
										<dict/>
										<key>TargetingType</key>
										<string>Front</string>
									</dict>
								</array>
								<key>MacroActionType</key>
								<string>IfThenElse</string>
								<key>ThenActions</key>
								<array/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728719.13875699</real>
				<key>Name</key>
				<string>w: Localhost</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>824C794C-EB63-43D8-B19C-22383DA4911A</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "medium."
set urlToFetch to "https://medium.com/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "medium."set urlToFetch to "https://medium.com/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728720.45657003</real>
				<key>Name</key>
				<string>w: Medium</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>0F533970-9D5B-4909-9C7D-8F64147F0343</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "ocw.mit.edu"
set urlToFetch to "https://ocw.mit.edu/courses"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "ocw.mit.edu"
set urlToFetch to "https://ocw.mit.edu/courses"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728731.80228996</real>
				<key>Name</key>
				<string>w: MIT opencourseware</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>B07ECDD8-112B-436C-AA38-949CB90C93AC</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://developer.mozilla.org/"
set urlToFetch to "https://developer.mozilla.org/en-US/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://developer.mozilla.org/"set urlToFetch to "https://developer.mozilla.org/en-US/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728734.14206505</real>
				<key>Name</key>
				<string>w: Mozilla dev</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>CC7C9138-C07D-4152-B1D9-7B1A6112AE50</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		RGgYFPcAAzhgC4ABOCIEgCuS5FSVJWmaMoyDIIh6VBESXA4DoOhOWpaloZAX
		BaFwIKyfZ/k+aLcF+cB4gABoDNY7DLHCd57tE2AAKyhTZx62SB2GAACNfSIK
		gbHJ52CAoCNKPAdg4AAQghSh8HyfIADwPA9keSJIEgOSuEKQpDFKPQ9DyLUN
		AAWxtHaf5TGg3AQSEABqnS7h6xo0aBTglljgFQACn4fQAAscxugABAXBgAFd
		tLgwAEKIoRTjXYAmqaxsnqJwmicHcFQYiAP5aFUmF4ZgSBGEYEnUeh7n+Qxe
		nA9VEHMeFgn3PkyT0w5+gI1gDnseoACMXxTAAY4ZiJQwOhHXIDLoAwB0AIgT
		AiAAtBgDAAn5E4+j8QJMkQQ5DDQiAyjKMw/kyTJLEAALYlEZZyn+XBrHbXIE
		UAcB2zckNkJa2Z+ALHAGnkdlGlMRYAGCGQggAZQbiWAABHxNwMAiBWHxuAB4
		HtFxHikE8XgU/hgGGYhyCcJYlhiefc8khQBFGUpSmELgtC0HZ8H2fR/kAWpt
		gAeZ8q2bh0JUfWib0w3GyGDB0YkOxQkOABnhGFAAFGKg6WYfbwIJYoAAzSYA
		ALZwtBsDQACOFILgCc50ryKInhRCYMmAQtiEAOgMBUXwvxfDVBmDIGYFRtjq
		HiP8QIsBsueNiOgeJ4HqFbSUREug+y3gABMNsZYAA7CmEkjkCKYxAhle+PwA
		iOFKlbfWnADwFD8PWAACoDi0Q7hIBOAEfA+lghoDOGsPiXhQCFIQCGKALRgD
		BF+M0DwHQPgFGCNgvIoRhjiAAdcuQ4h0kqNJB8hqe4bA2GoL0AAbhXCnIKHg
		NgfAADlAwCZZjDViELWqaUDoFAFpHV0AARQVwWGxLkH4PwhBOiEEIIIMhCAV
		yVB1AkXwxQLAVAqAAWQzhyD/FRF8AA9h8ouHc85ZJEjxkCB+2AAAdROh9NkM
		QZoABGBPDAAAX4MgnMXH2sEhh/yBAPAWjgDQE5BrWIEJAMAMAAq7UAIsRYjh
		WB2mwFUhBOwVA4GAL8XoxyfgYAALQZw4h/iplIPsfZlhyDsO4XSNBdU+gYAk
		6QTQbgegAAoPcdwARRhvEaP8TAGgfGyWcpUhyljWvxfbMpOJqwACUDIDIAK1
		VACKEUI0VQd6PBXIQB6kQKYpjAGeCEEAIQDjFGuOcf4mRbDcAAO+VQ7INwYI
		UweHgigyA2AADsFIFgAimGJOgTAuHmD8HssGecw04AQAaAdGoFHSATdMIkMI
		MaFFyD2HsP4mG2iHDSQgjACwIC6F6L0aoOgbg3A0OGCQ/w8ieGcxdZoABvjm
		HkAAfR1zZRoHzK0L4SXxhuCeCoAIkRYDVXyLx5iy29VNIiBV0azFnA4BVJ0O
		oVAXABqW00MYZAzB0FQKYUwjSGCaE2JoXKnAyhGOurEQAnxngAHCduvA5VcH
		/YOQKdhlgYAoAsAASIbAcgAEQKcaAABbjFHCsyZkPCuEgLkCMDwEK/l0DME5
		1oPwXAbACOMcY4h+BNZOEQaN6RgkMCsFcK4bxSikFGJBpJrBWDAG6P8U4uqZ
		AOdMNcbjkiPlyTCkMQYaLjijFvBcYwzziAGNQg59gGQMLRASjE1szBKhzB4n
		EBLWhbC3FwNkKYUgpg1JOSkhhMAKAdF2LwXQ0QYAvBiBEelSx/h+EyMwAA4n
		pAAHasAAFgTqBRa+AAaQ23JDUG0bjCCgErkCNgXQDIF1okbNKFkIwJAABPB8
		COIkRgABxDgHQQomBLiXjsRNA4bxGCQEeI0ObejSjGGkOYf4jRRXLAoBMuA5
		2bgAbOZYvB3AC4ROKVlOCcAXP4AAPIei4QQgcAcAAQ4bAcWWNgMUZAyx1BSS
		0DUdWo4wETTEA8CwrRXCuGQEMIQQgQr0FiMAb4/xOCuGorkBSOCjrhHQOuMz
		GUAECukQ/AaLwHlwAuBU/A8R5LhBICC7AfQzA1ABZQBYASjjvAAGgNAaw5Cp
		FQKgR5xQa1tCQKsVYqRYAfixVJMgABXC+vyLAXrEh1o6Ret22w5URTylLKY0
		SzjzGWAQAc+migAbubCPKm4DgH1SA4Bc/AdgxAyAABcCYDQAtDRcJISYlRYh
		3DqHUKpIR+ouyillLbdhMCWAwBcDGwl/jcHWrIV41QAaATcOwdrTQNAY0qOL
		fyNehAAHMOevYHQNpjf2SoB4DkhtJNKEYHYIAABbCdHp+IBWzJmAAKQUoqBi
		hvOSFEeXaU1ZRIQYkJYYBGiQEaJIFIJgTrRj6vQZg1R1D/GEMkcgABxjmJUO
		UdRKuDn0JIi4CPUp+ARSGDAFSkAhA5A74/bJBB7ebAAJ4TwoBbh8D4HsMA8f
		TG47YQ+bgOPRB8EcFAKATgcoXkGQYuR5lYjzHow4e6NFrF0AWAo+nwQDmxyg
		QUrY0RqDVHmJQSIlBGm6E+Ihs4/Fw+pJbfUBASgkhLC4FwMAXAzg7B0DoGWV
		QLZTNYRIuQ8x6kqGyNgbI6xYixFmLG+IpBJDf/4NP7D/5ZQiwFInYGgGoGwG
		oICSoFYGIDUBoDgBQjABQfidgfod8CwdgbkDIbQZ4ZwZ4YwZwZwZoYQ4Qdo4
		kAEE4wyyIAbRRg5xUFEF8GEGIlogIAAADwEAAAMAAAABACAAAAEBAAMAAAAB
		ACAAAAECAAMAAAAEAAAvDAEDAAMAAAABAAUAAAEGAAMAAAABAAIAAAERAAQA
		AAABAAAk4gESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABACAAAAEX
		AAQAAAABAAAJbwEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFSAAMAAAABAAEA
		AAFTAAMAAAAEAAAvFIdzAAcAAAfYAAAvHAAAOhoACAAIAAgACAABAAEAAQAB
		AAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgALYWNzcEFQUEwA
		AAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZGVz
		YwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3RwdAAAB0wAAAAU
		clhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAUclRSQwAAB5wA
		AAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wAAAAOZGVzYwAA
		AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAFEdlbmVyaWMg
		UkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NLAAAAKAAAAYRk
		YURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5wdEJSAAAAJgAA
		AiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAAApp6aFRXAAAA
		FgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAAHgAAAyBpdElU
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "netlify.com"
set urlToFetch to "https://app.netlify.com/account/sites"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "netlify.com"set urlToFetch to "https://app.netlify.com/account/sites"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728735.09796095</real>
				<key>Name</key>
				<string>w: Netlify</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>D74B456E-A28F-48E3-907B-5DEAF8898BC1</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "npmjs"
set urlToFetch to "https://www.npmjs.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "npmjs"set urlToFetch to "https://www.npmjs.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728736.06397796</real>
				<key>Name</key>
				<string>w: Npm</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>2B5A2539-F1E3-4CD2-9B3B-B79147AFEB38</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "npms"
set urlToFetch to "https://npms.io/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "npms"set urlToFetch to "https://npms.io/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728737.15966296</real>
				<key>Name</key>
				<string>w: Npms</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>53C4907B-997D-4822-9271-3AFC13B36059</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "pinboard.in"set urlToFetch to "https://pinboard.in/popular/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "pinboard.in"set urlToFetch to "https://pinboard.in/popular/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728738.25370896</real>
				<key>Name</key>
				<string>w: Pinboard</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>6179CDD4-D665-4B1B-A8F1-E281D42563BA</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "pinboard.in"set urlToFetch to "https://pinboard.in/recent/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "pinboard.in"set urlToFetch to "https://pinboard.in/recent/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728739.35169303</real>
				<key>Name</key>
				<string>w: Pinboard recent</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>0560B26F-2F96-4E16-A947-E4E21149CFCC</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "getpocket"
set urlToFetch to "https://getpocket.com/a/queue/list/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "getpocket"set urlToFetch to "https://getpocket.com/a/queue/list/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728740.34936702</real>
				<key>Name</key>
				<string>w: Pocket</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>381E9EE7-F91E-4B41-AD74-64A4C38FDE04</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "producthunt.com"
set urlToFetch to "https://www.producthunt.com "

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "producthunt.com"set urlToFetch to "https://www.producthunt.com "tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728741.34365201</real>
				<key>Name</key>
				<string>w: Product hunt</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>C6F21D90-D714-4898-8009-CD21CABB593C</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "quora.com"
set urlToFetch to "https://www.quora.com/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "quora.com"set urlToFetch to "https://www.quora.com/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728742.31294703</real>
				<key>Name</key>
				<string>w: Quora</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>F8DF06C2-615F-4A5F-94EA-3DD8BC572771</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "quora.com"set urlToFetch to "https://www.quora.com/answer"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "quora.com"set urlToFetch to "https://www.quora.com/answer"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728743.30201495</real>
				<key>Name</key>
				<string>w: Quora answer</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>014547AC-3809-4BDB-8358-942D14780204</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "reddit.com"
set urlToFetch to "https://www.reddit.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "reddit.com"
set urlToFetch to "https://www.reddit.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
							<dict>
								<key>Argument</key>
								<string>0.5</string>
								<key>Command</key>
								<string>WaitForComplete</string>
								<key>MacroActionType</key>
								<string>SafariControl</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>WebBrowser</key>
								<string>Safari</string>
							</dict>
							<dict>
								<key>KeyCode</key>
								<integer>34</integer>
								<key>MacroActionType</key>
								<string>SimulateKeystroke</string>
								<key>Modifiers</key>
								<integer>0</integer>
								<key>ReleaseAll</key>
								<false/>
								<key>TargetApplication</key>
								<dict/>
								<key>TargetingType</key>
								<string>Front</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>Argument</key>
						<string>0.5</string>
						<key>Command</key>
						<string>WaitForComplete</string>
						<key>MacroActionType</key>
						<string>SafariControl</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>WebBrowser</key>
						<string>Safari</string>
					</dict>
					<dict>
						<key>KeyCode</key>
						<integer>34</integer>
						<key>MacroActionType</key>
						<string>SimulateKeystroke</string>
						<key>Modifiers</key>
						<integer>0</integer>
						<key>ReleaseAll</key>
						<false/>
						<key>TargetApplication</key>
						<dict/>
						<key>TargetingType</key>
						<string>Front</string>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728744.392946</real>
				<key>Name</key>
				<string>w: Reddit</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>CE2A58DD-EDF1-4C4A-9683-480D8EBAD9C7</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://www.reddit.com/me/m/top/new/"
set urlToFetch to "https://www.reddit.com/me/m/top/new/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://www.reddit.com/me/m/top/new/"set urlToFetch to "https://www.reddit.com/me/m/top/new/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728745.48494196</real>
				<key>Name</key>
				<string>w: Reddit top new</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>A19310A2-FD5D-45AE-B259-598B65D3BF73</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://www.reddit.com/message/unread"
set urlToFetch to "https://www.reddit.com/message/unread"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://www.reddit.com/message/unread"set urlToFetch to "https://www.reddit.com/message/unread"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728746.57982099</real>
				<key>Name</key>
				<string>w: Reddit unread</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>5AFCFACD-D906-4C2E-AA0C-1DA79D957AB1</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "regex101"
set urlToFetch to "https://regex101.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "regex101"set urlToFetch to "https://regex101.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728753.60494399</real>
				<key>Name</key>
				<string>w: Regex101</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>1A05667B-725A-4D85-95B1-304DB26562A3</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "repl.it"
set urlToFetch to "https://repl.it/languages/python"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "repl.it"set urlToFetch to "https://repl.it/languages/python"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728748.682441</real>
				<key>Name</key>
				<string>w: Repl</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>4546C3EB-A241-4933-99FD-84BF4FA4074C</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "slack.com/"
set urlToFetch to "https://learnanythingxyz.slack.com/messages/C5BGJ5WJK/"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "slack.com/"set urlToFetch to "https://learnanythingxyz.slack.com/messages/C5BGJ5WJK/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728755.57406199</real>
				<key>Name</key>
				<string>w: Slack</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>73E94192-2E7D-44CE-AB89-F73790861FE8</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "soundcloud.com"
set urlToFetch to "https://soundcloud.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "soundcloud.com"
set urlToFetch to "https://soundcloud.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728756.56970406</real>
				<key>Name</key>
				<string>w: Soundcloud</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>986C83DE-6DCE-4379-A519-901123FA7CB9</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "sourcegraph"
set urlToFetch to "https://sourcegraph.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "sourcegraph"set urlToFetch to "https://sourcegraph.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728757.56691396</real>
				<key>Name</key>
				<string>w: Sourcegraph</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>5E1F4723-196D-4E5B-AFEC-400E45AB1DBA</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		RGgYFPcAAzhgC4ABOCIEgCuS5FSVJWmaMoyDIIh6VBESXA4DoOhOWpaloZAX
		BaFwIKyfZ/k+aLcF+cB4gABoDNY7DLHCd57tE2AAKyhTZx62SB2GAACNfSIK
		gbHJ52CAoCNKPAdg4AAQghSh8HyfIADwPA9keSJIEgOSuEKQpDFKPQ9DyLUN
		AAWxtHaf5TGg3AQSEABqnS7h6xo0aBTglljgFQACn4fQAAscxugABAXBgAFd
		tLgwAEKIoRTjXYAmqaxsnqJwmicHcFQYiAP5aFUmF4ZgSBGEYEnUeh7n+Qxe
		nA9VEHMeFgn3PkyT0w5+gI1gDnseoACMXxTAAY4ZiJQwOhHXIDLoAwB0AIgT
		AiAAtBgDAAn5E4+j8QJMkQQ5DDQiAyjKMw/kyTJLEAALYlEZZyn+XBrHbXIE
		UAcB2zckNkJa2Z+ALHAGnkdlGlMRYAGCGQggAZQbiWAABHxNwMAiBWHxuAB4
		HtFxHikE8XgU/hgGGYhyCcJYlhiefc8khQBFGUpSmELgtC0HZ8H2fR/kAWpt
		gAeZ8q2bh0JUfWib0w3GyGDB0YkOxQkOABnhGFAAFGKg6WYfbwIJYoAAzSYA
		ALZwtBsDQACOFILgCc50ryKInhRCYMmAQtiEAOgMBUXwvxfDVBmDIGYFRtjq
		HiP8QIsBsueNiOgeJ4HqFbSUREug+y3gABMNsZYAA7CmEkjkCKYxAhle+PwA
		iOFKlbfWnADwFD8PWAACoDi0Q7hIBOAEfA+lghoDOGsPiXhQCFIQCGKALRgD
		BF+M0DwHQPgFGCNgvIoRhjiAAdcuQ4h0kqNJB8hqe4bA2GoL0AAbhXCnIKHg
		NgfAADlAwCZZjDViELWqaUDoFAFpHV0AARQVwWGxLkH4PwhBOiEEIIIMhCAV
		yVB1AkXwxQLAVAqAAWQzhyD/FRF8AA9h8ouHc85ZJEjxkCB+2AAAdROh9NkM
		QZoABGBPDAAAX4MgnMXH2sEhh/yBAPAWjgDQE5BrWIEJAMAMAAq7UAIsRYjh
		WB2mwFUhBOwVA4GAL8XoxyfgYAALQZw4h/iplIPsfZlhyDsO4XSNBdU+gYAk
		6QTQbgegAAoPcdwARRhvEaP8TAGgfGyWcpUhyljWvxfbMpOJqwACUDIDIAK1
		VACKEUI0VQd6PBXIQB6kQKYpjAGeCEEAIQDjFGuOcf4mRbDcAAO+VQ7INwYI
		UweHgigyA2AADsFIFgAimGJOgTAuHmD8HssGecw04AQAaAdGoFHSATdMIkMI
		MaFFyD2HsP4mG2iHDSQgjACwIC6F6L0aoOgbg3A0OGCQ/w8ieGcxdZoABvjm
		HkAAfR1zZRoHzK0L4SXxhuCeCoAIkRYDVXyLx5iy29VNIiBV0azFnA4BVJ0O
		oVAXABqW00MYZAzB0FQKYUwjSGCaE2JoXKnAyhGOurEQAnxngAHCduvA5VcH
		/YOQKdhlgYAoAsAASIbAcgAEQKcaAABbjFHCsyZkPCuEgLkCMDwEK/l0DME5
		1oPwXAbACOMcY4h+BNZOEQaN6RgkMCsFcK4bxSikFGJBpJrBWDAG6P8U4uqZ
		AOdMNcbjkiPlyTCkMQYaLjijFvBcYwzziAGNQg59gGQMLRASjE1szBKhzB4n
		EBLWhbC3FwNkKYUgpg1JOSkhhMAKAdF2LwXQ0QYAvBiBEelSx/h+EyMwAA4n
		pAAHasAAFgTqBRa+AAaQ23JDUG0bjCCgErkCNgXQDIF1okbNKFkIwJAABPB8
		COIkRgABxDgHQQomBLiXjsRNA4bxGCQEeI0ObejSjGGkOYf4jRRXLAoBMuA5
		2bgAbOZYvB3AC4ROKVlOCcAXP4AAPIei4QQgcAcAAQ4bAcWWNgMUZAyx1BSS
		0DUdWo4wETTEA8CwrRXCuGQEMIQQgQr0FiMAb4/xOCuGorkBSOCjrhHQOuMz
		GUAECukQ/AaLwHlwAuBU/A8R5LhBICC7AfQzA1ABZQBYASjjvAAGgNAaw5Cp
		FQKgR5xQa1tCQKsVYqRYAfixVJMgABXC+vyLAXrEh1o6Ret22w5URTylLKY0
		SzjzGWAQAc+migAbubCPKm4DgH1SA4Bc/AdgxAyAABcCYDQAtDRcJISYlRYh
		3DqHUKpIR+ouyillLbdhMCWAwBcDGwl/jcHWrIV41QAaATcOwdrTQNAY0qOL
		fyNehAAHMOevYHQNpjf2SoB4DkhtJNKEYHYIAABbCdHp+IBWzJmAAKQUoqBi
		hvOSFEeXaU1ZRIQYkJYYBGiQEaJIFIJgTrRj6vQZg1R1D/GEMkcgABxjmJUO
		UdRKuDn0JIi4CPUp+ARSGDAFSkAhA5A74/bJBB7ebAAJ4TwoBbh8D4HsMA8f
		TG47YQ+bgOPRB8EcFAKATgcoXkGQYuR5lYjzHow4e6NFrF0AWAo+nwQDmxyg
		QUrY0RqDVHmJQSIlBGm6E+Ihs4/Fw+pJbfUBASgkhLC4FwMAXAzg7B0DoGWV
		QLZTNYRIuQ8x6kqGyNgbI6xYixFmLG+IpBJDf/4NP7D/5ZQiwFInYGgGoGwG
		oICSoFYGIDUBoDgBQjABQfidgfod8CwdgbkDIbQZ4ZwZ4YwZwZwZoYQ4Qdo4
		kAEE4wyyIAbRRg5xUFEF8GEGIlogIAAADwEAAAMAAAABACAAAAEBAAMAAAAB
		ACAAAAECAAMAAAAEAAAvDAEDAAMAAAABAAUAAAEGAAMAAAABAAIAAAERAAQA
		AAABAAAk4gESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABACAAAAEX
		AAQAAAABAAAJbwEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFSAAMAAAABAAEA
		AAFTAAMAAAAEAAAvFIdzAAcAAAfYAAAvHAAAOhoACAAIAAgACAABAAEAAQAB
		AAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgALYWNzcEFQUEwA
		AAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZGVz
		YwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3RwdAAAB0wAAAAU
		clhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAUclRSQwAAB5wA
		AAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wAAAAOZGVzYwAA
		AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAFEdlbmVyaWMg
		UkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NLAAAAKAAAAYRk
		YURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5wdEJSAAAAJgAA
		AiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAAApp6aFRXAAAA
		FgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAAHgAAAyBpdElU
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "stackexchange"
set urlToFetch to "https://stackexchange.com/questions?tab=realtime"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "stackexchange"set urlToFetch to "https://stackexchange.com/questions?tab=realtime"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728758.53598702</real>
				<key>Name</key>
				<string>w: Stack</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>A237D5CC-7559-42C3-9DF9-FB4F283C4BE3</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "http://stackexchange.com/?pagesize=50"
set urlToFetch to "http://stackexchange.com/?pagesize=50"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "http://stackexchange.com/?pagesize=50"set urlToFetch to "http://stackexchange.com/?pagesize=50"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728759.52620304</real>
				<key>Name</key>
				<string>w: Stack exchange hot</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>83AC69CD-F5B0-4813-A228-CF705085152F</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		RGgYFPcAAzhgC4ABOCIEgCuS5FSVJWmaMoyDIIh6VBESXA4DoOhOWpaloZAX
		BaFwIKyfZ/k+aLcF+cB4gABoDNY7DLHCd57tE2AAKyhTZx62SB2GAACNfSIK
		gbHJ52CAoCNKPAdg4AAQghSh8HyfIADwPA9keSJIEgOSuEKQpDFKPQ9DyLUN
		AAWxtHaf5TGg3AQSEABqnS7h6xo0aBTglljgFQACn4fQAAscxugABAXBgAFd
		tLgwAEKIoRTjXYAmqaxsnqJwmicHcFQYiAP5aFUmF4ZgSBGEYEnUeh7n+Qxe
		nA9VEHMeFgn3PkyT0w5+gI1gDnseoACMXxTAAY4ZiJQwOhHXIDLoAwB0AIgT
		AiAAtBgDAAn5E4+j8QJMkQQ5DDQiAyjKMw/kyTJLEAALYlEZZyn+XBrHbXIE
		UAcB2zckNkJa2Z+ALHAGnkdlGlMRYAGCGQggAZQbiWAABHxNwMAiBWHxuAB4
		HtFxHikE8XgU/hgGGYhyCcJYlhiefc8khQBFGUpSmELgtC0HZ8H2fR/kAWpt
		gAeZ8q2bh0JUfWib0w3GyGDB0YkOxQkOABnhGFAAFGKg6WYfbwIJYoAAzSYA
		ALZwtBsDQACOFILgCc50ryKInhRCYMmAQtiEAOgMBUXwvxfDVBmDIGYFRtjq
		HiP8QIsBsueNiOgeJ4HqFbSUREug+y3gABMNsZYAA7CmEkjkCKYxAhle+PwA
		iOFKlbfWnADwFD8PWAACoDi0Q7hIBOAEfA+lghoDOGsPiXhQCFIQCGKALRgD
		BF+M0DwHQPgFGCNgvIoRhjiAAdcuQ4h0kqNJB8hqe4bA2GoL0AAbhXCnIKHg
		NgfAADlAwCZZjDViELWqaUDoFAFpHV0AARQVwWGxLkH4PwhBOiEEIIIMhCAV
		yVB1AkXwxQLAVAqAAWQzhyD/FRF8AA9h8ouHc85ZJEjxkCB+2AAAdROh9NkM
		QZoABGBPDAAAX4MgnMXH2sEhh/yBAPAWjgDQE5BrWIEJAMAMAAq7UAIsRYjh
		WB2mwFUhBOwVA4GAL8XoxyfgYAALQZw4h/iplIPsfZlhyDsO4XSNBdU+gYAk
		6QTQbgegAAoPcdwARRhvEaP8TAGgfGyWcpUhyljWvxfbMpOJqwACUDIDIAK1
		VACKEUI0VQd6PBXIQB6kQKYpjAGeCEEAIQDjFGuOcf4mRbDcAAO+VQ7INwYI
		UweHgigyA2AADsFIFgAimGJOgTAuHmD8HssGecw04AQAaAdGoFHSATdMIkMI
		MaFFyD2HsP4mG2iHDSQgjACwIC6F6L0aoOgbg3A0OGCQ/w8ieGcxdZoABvjm
		HkAAfR1zZRoHzK0L4SXxhuCeCoAIkRYDVXyLx5iy29VNIiBV0azFnA4BVJ0O
		oVAXABqW00MYZAzB0FQKYUwjSGCaE2JoXKnAyhGOurEQAnxngAHCduvA5VcH
		/YOQKdhlgYAoAsAASIbAcgAEQKcaAABbjFHCsyZkPCuEgLkCMDwEK/l0DME5
		1oPwXAbACOMcY4h+BNZOEQaN6RgkMCsFcK4bxSikFGJBpJrBWDAG6P8U4uqZ
		AOdMNcbjkiPlyTCkMQYaLjijFvBcYwzziAGNQg59gGQMLRASjE1szBKhzB4n
		EBLWhbC3FwNkKYUgpg1JOSkhhMAKAdF2LwXQ0QYAvBiBEelSx/h+EyMwAA4n
		pAAHasAAFgTqBRa+AAaQ23JDUG0bjCCgErkCNgXQDIF1okbNKFkIwJAABPB8
		COIkRgABxDgHQQomBLiXjsRNA4bxGCQEeI0ObejSjGGkOYf4jRRXLAoBMuA5
		2bgAbOZYvB3AC4ROKVlOCcAXP4AAPIei4QQgcAcAAQ4bAcWWNgMUZAyx1BSS
		0DUdWo4wETTEA8CwrRXCuGQEMIQQgQr0FiMAb4/xOCuGorkBSOCjrhHQOuMz
		GUAECukQ/AaLwHlwAuBU/A8R5LhBICC7AfQzA1ABZQBYASjjvAAGgNAaw5Cp
		FQKgR5xQa1tCQKsVYqRYAfixVJMgABXC+vyLAXrEh1o6Ret22w5URTylLKY0
		SzjzGWAQAc+migAbubCPKm4DgH1SA4Bc/AdgxAyAABcCYDQAtDRcJISYlRYh
		3DqHUKpIR+ouyillLbdhMCWAwBcDGwl/jcHWrIV41QAaATcOwdrTQNAY0qOL
		fyNehAAHMOevYHQNpjf2SoB4DkhtJNKEYHYIAABbCdHp+IBWzJmAAKQUoqBi
		hvOSFEeXaU1ZRIQYkJYYBGiQEaJIFIJgTrRj6vQZg1R1D/GEMkcgABxjmJUO
		UdRKuDn0JIi4CPUp+ARSGDAFSkAhA5A74/bJBB7ebAAJ4TwoBbh8D4HsMA8f
		TG47YQ+bgOPRB8EcFAKATgcoXkGQYuR5lYjzHow4e6NFrF0AWAo+nwQDmxyg
		QUrY0RqDVHmJQSIlBGm6E+Ihs4/Fw+pJbfUBASgkhLC4FwMAXAzg7B0DoGWV
		QLZTNYRIuQ8x6kqGyNgbI6xYixFmLG+IpBJDf/4NP7D/5ZQiwFInYGgGoGwG
		oICSoFYGIDUBoDgBQjABQfidgfod8CwdgbkDIbQZ4ZwZ4YwZwZwZoYQ4Qdo4
		kAEE4wyyIAbRRg5xUFEF8GEGIlogIAAADwEAAAMAAAABACAAAAEBAAMAAAAB
		ACAAAAECAAMAAAAEAAAvDAEDAAMAAAABAAUAAAEGAAMAAAABAAIAAAERAAQA
		AAABAAAk4gESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABACAAAAEX
		AAQAAAABAAAJbwEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFSAAMAAAABAAEA
		AAFTAAMAAAAEAAAvFIdzAAcAAAfYAAAvHAAAOhoACAAIAAgACAABAAEAAQAB
		AAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgALYWNzcEFQUEwA
		AAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZGVz
		YwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3RwdAAAB0wAAAAU
		clhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAUclRSQwAAB5wA
		AAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wAAAAOZGVzYwAA
		AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAFEdlbmVyaWMg
		UkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NLAAAAKAAAAYRk
		YURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5wdEJSAAAAJgAA
		AiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAAApp6aFRXAAAA
		FgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAAHgAAAyBpdElU
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "stackoverflow.com"
set urlToFetch to "http://stackoverflow.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "stackoverflow.com"
set urlToFetch to "http://stackoverflow.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728760.52034199</real>
				<key>Name</key>
				<string>w: Stack overflow</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>99036332-ACBB-4162-9105-E45F7179CD90</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		TU0AKgAAHECAACBQOCQWDQeEQmFQuGQ2HQ+IRGJROKRWLReMRmNRuOR2PR+Q
		SGRSOSSWTSeUSmDgmWAwLy8OhqZCEKBUKh0IhAJBUFAsEg0BgIBgN+0V+vV7
		PV5PB3vF1090uNzVNvumrON8Vl6yquV2vQ4P2EUDQajUhjQZjQhCUTCYYBYL
		hYNA4Hg8EAkEAgAAUCAQAAEBAG/4N/4UAUYAPuigB8PZ7gB5ZF8VZ0uRt5do
		MxlsxfMxmMpeuPRNqv6XTRcFakHD4fD8nEklEkvC8YDAdBncAvdAoAXkDAAD
		cEAAe+P+hAMAYHBAHmQnCv/D4Z+dMAPp8vsAvl8vgAPd8PoAPWkADKPRoedi
		LdarZRMNhsJZVl8VvT/WuywEgwlkwmGEqCqKo1BWFYWBQCQIgeAAGAW3iegS
		f4CKGwSBue6CDueiLmQmgbmwmwUKn3ELIHmeoAnoeh7AAeB4niABrmsaxqlW
		VRVEmW0blG7R8xS+0eo4Hgeh6J4zyIQIZBmGoXgkCQHABBAHH+A4DgNDYAQr
		DCISqh8LQzDsNQq8R7H+dp3HgAR4HkegAGgZpnGaTE4D8ZBkGMW0fTuhoIT0
		Co1DUNhDigKYpDGDYMguAAJgmCEouCAMrsMhENw05ctoFCx/w8waHUvCqFuU
		5bBHnE5+nSdZ2gGdh2HefpXFYVZNEwS5Lj2edanfPEfBTXQaj2Po/E6G4bBs
		FoLAqCQAAcBwGStR6E0/TSCHcfJ+H+bh6H2ABvHk8B0HxbB2Wm6p+oEfJ/Og
		A7AuGoNEXQAAMgSAoABCBt4hKBi9AjdEtQtc1IIMAWAUdftSnYf0yHgAZmGb
		NpCECQIxm5iJoVwrrWB8KI+D8QBOBQFASAkDALAof4C5KAJ/ZRLiC2e5p4n0
		fp/mSdcUmKdMUm2eLHw1ZiBW3cYQrsABuHg7ggA2BoAGOdE1AcAy/HqxUFAK
		5AJAO5B0nu8ATAeA4AB6DGkBuCoE6kAcPuhfuVZ3ScSHqfhynKdICHCcJxnW
		QA/D4ME5mRO2KJEI/Ai4PpAECTYRBADwEAwC+RoJLEOQ8wAAne65/lmcJ5gA
		YZz80cZ5vADIGN+AjAakAQABSCWyFobx3AAI4PggABcnCeAADAFNDlKbZ1gA
		GgK2Wa54RSG4LWWeh+H8ABgHHFoOgcvRyHm7gLAVeIjA9BIl+gAAHgMwNm5X
		gJ9RCfpwHEcgAnOcx1HuQI/j8MJfl+XxV7+jQhf0KxBkMQwogSAiBCAdYqx1
		HsqOScoww/xbDiHkAAV43nbu2HyAAIoIHZjnHseAdTUAAAzeOAAZQ6U1BSY+
		AAUY1h1AABq6IAAzx0lbC6CkCoABSjYd8W9pA0h2FbCyCcCYABbjgduYo6AK
		wJm8GKOaB4Oi5gAF8ON24FwFG/C2CiIIRgNgMSq2kgik2UD+H6N8cI5B/jlH
		MOkfYew9B4CwMU9wsn8ERNqDAHwjhJCSFoCsE4JQGgWZElZlMCCBMAMCzMfY
		/xLjThWMQccDwNvRAAB8BzXRyj0PAEQDzsxRDUHSABYiyxsDuK2FoFAFgACs
		G0OwxjyloBDdkAAYI5EWr9AAARdIYgWAYAAJgaQ5wAAlAibwdw91sPQa7FRe
		ItRuOvBEBI3g3R3IpBwBpZYbC3gAAkAh0sg4voajCP0b0ZB/t0HIPQN4bg2h
		IRgNYZMcyESAAsB1OAmRhA3BwDYEAGmQpWWY5CQrARrTTH+IYYw5QAALOIAA
		EgEWyC7G6O0AASgSAUAAMkc6LQnAlosL52wAByjxO4usAADQDl+g28tmDy3H
		oWObP4gTpXUARAQvEdg94KnMdQ6ggQYwYS8FINSFYH2gvXdQNFpYAGwNdH2y
		gAAdgbAaAACamjJ2UkEU+Ps6Y/BtjeHCAIaY0RqjdDWGoM4Ph21pHRHOQwBB
		DiIEUK8KwVgqBMA8B0DKmDm0AgSYEZbSx/iOGQOZJz1wAPOMeGEF9UheDgVu
		OgecFSCOjOQzA6A8B7j8Wg8s6DqEtEUlscqmFJaTgABFQ6F454HgwAyk0aVk
		AABVBVKhz8FRgDeVu8c34eAdAbAAC8CwC6rLmqwwFto+26DlAKLEWAsBVh8D
		2HsLBA6WJ3CeFEKIaBCiEEKJcEIIgOj/AUXm4bKpDABGjB0f4hBhDjABKRbA
		PIMAAWoQKxyKQqAqUOJ8Z9CHlHQUhS9ShpsAAAuIABsxgqmvLB8CBY7Rzfik
		GhWsG8sRzPURUPZbAhghggAACoCgCry3FbMOgqw+ByPtAQH4PQewvi3FwexH
		pNgKgcE6KEUIywcg1BoBgCgFAI4GquQNgIAXnD6H+HIXA3HfgbdmtuzQyBwq
		3BaBhJo2x2lbeivEeq4R+MwngQxLgMwOOztfA8EADl4gYAebwYTrpJgTbIdd
		5YiAighqUAwAtVjCs7IINsbg4B+DVGsNgdAYwwhfBoO/RkKzShvDeHESOkQ3
		BuA+TGvTZzoM7H1fUPYvBvLZHcdzL50AvAzt8NWDoABiDeokUF1DaFoU6zCQ
		gf7yx/ACL8P8fh4ASjcGaAAdgKAZmQZIAAKSxDEyuFUNGYANJNgAEPneW9PE
		MXnVEPQfI3hwDlAOJgSwlhEqxEsHgroG90AjFCKIUYzi0AvLoA9JsYbzMBE6
		M0cw/xRjLmAEUE8qFr2aGnSEAAS79RQG5RIeS3loa1IaP4Aa8QDD6RSEwWgn
		QADMBgD0AA4QRAwAAFoF0qB1baAALaFVpgKALwytgKnIwABbBgBfEeRGAzjH
		EPkbI2lrBgC8F0GI6uhXuJOGlPoiQ7dJDsB8DwGmVbXYCNsdiYhDi+HEuJcY
		4x3mPBdE+KR3B6cMKDZ/hxCx+gEN+AwerrwzieEKAAaIKAYgAF0EcLxvR9wV
		Ak6MAA52iAAn1kECFNYoO9OGAV1AlgpApAABx7+fDjMBHoeIfI3RvjjAOJMS
		AkRACdE6JwQJJAGejAgKAUQpBpBBCADwDqB0E70UkwEPwuBvD/GparmOZOO9
		/F4NiFbL3l2e7KRAfYBmugWHQN8AAcxNiDAAOYCsqBKBmEMX8ftmlHNoMN2N
		ZHhB66dAAEME0qKIlbycb8PYQwQsCltQEwOgBvj6GaM8aA4QwheC8DE+R9CP
		BA/8CmEoEqEsFYBMBKBAQgL6n+r6ACGyvUD+FuG6wQXSHQswAACABMhqpqdQ
		FwGqk+kM+GIW+KL0BG2A+WE8EYMOXSD4DoEcAAHoAYiCAEjEISKKeWBYA6dm
		CGBKWOGgem1YoiL2bMAAEuCuBWkmqq3ovOHYTIHu24HGAQnSDcCYToTqJAD6
		D6D+FGDQDSDOC4A0Ayhq3ouKMCEcF+HAgYGkk+B7AwIKGCGyd8XTBAIUr0vo
		AML0BoGaF0AADWFME0oSg2AAD+DcDuRcBQB2L2H0MeIYwOBIAuWWHWsjBcHw
		s0BWA0QSHClIAACMBUhqDS9YvKUmq2H2GyG2G+AKFHFQE2EUEQEQDMI4PwAY
		FGFKFKGmCGCEB+gw3kyEXMU+siWoDqFeNIpSAAHEHYTUQi1igXDkUiMEH64i
		gsGEFSAADCVcAAN4gqE+CWCgAAFgCQDKluH2O4IoH6uIAMXWB2BKiDEgPAGq
		4IA2dWAAE8C4BaOAlxAUvOG424HyGUGUGaG+0S/yH1IFHEIsBOBOLGFCFIFI
		GQBeBaBSAGSmAKU6vOGOG+HeH+ESFrAiCSBel4y2Wyh6lk98MTHI4a1q1yOQ
		AEH+XGCqFuE2AACmF6F6luwMouBWBQAAEaDAEAMOACL8YEIyS4acdQA4Ak5Y
		BYaOAAGKywAAD0ooAABke0vKvOHOHQHQHsG1FKAEDEDADCBqG8G8G6GoIwCW
		CaCaDGEfLSE4BGBCvCZ26gMCE0GGHCH+FgGYmA+AOHHsA+AoWWG6HUc0OuXG
		7IVw7OXiASHwc0DGFgEk/CGYGevoOSveAi5YD8DNJ4HUAqw8AE17KCQsAiXu
		AACoBqt9GMgrHageGuloAADGCAzwDAB0A5KmYCMieoG0G6HCAQD0DuDuC0F2
		F2F0FOIwDWDYDcEaDyDyDuDkA2A0lQ9gckMCDkFQGoH+7CeWBHEcAAG2HRNT
		NWams9MIPsQsH4AKN+AmHeoQDYFaEiAABjNuMYL3JoeWEYC0DGaSBkCUL2Hz
		EVPCIkQsYAIEUov+AAAgAWN+S4BVKSEOvy+ywOOYRCRCGxFKAKEoEmEmEKE2
		EyEyD4IwEKEOEOFaDKDIDGCkAqyBF2OMQ0WmXMDIE7MhGKK2X8Q45sQmkIK+
		S4MEH0AKa6BAHIGsAADiFcEmkmHMd8grMOMTG4B3EOFACYDeluH6WwtGJCOg
		zAt+wcSdQNO0HQRbO/HiDIBlAkS0jCH9QkG6ACFUFSFYFQEEEAD+C2IwEsEw
		EyGGCuCsCmB49dRQyKHSHiHyH+DyFSGrAs4OIJMEiEGgsIHZT8OTP6K6kSME
		BcG6neDgFkE+ScHkK2PAL8N+s0G2A8AyAAEEC6D+MYAQWWADJKJQL6dQXgL8
		ZNHqOQy+eWE4DLTCAgeuZOOeZ252G8H4FwFyF0GCDinSCKIoKGKGE4E+FAGa
		CgCcCUBeAhF1CSOUHC6mH+DGEuGYMSqaAAASaspKsMHg++AAHyH0eXUcJQWw
		dQB4AUc0DcEUDsluHec0s0XidQeWH0AEXiD8DEDmAAG6A6BcluH4skJPHJBt
		SwB0BOhqO+s0HckwAAGMGylYEuDK5AA2oc8gvPFIG6HyGAGAGIGgDQDMDIBw
		IoZLR2E+FEFEGeCYCSCQBSLqWXWoOYG0HOHoH+D7OmlAA8WOy+XGGMGud8g3
		XWpeNLBq8ahCEwDRZOAUFkFe2EDKD0SsHmRSbIIEEsCTG2FsBuumAKH2R5JM
		JUwAX4X4uIAW8IE6DYBqkmxDY2YCG4G6HAH0PcGKGpRGDEBrTIIgL67RZW3a
		CYCUCQBXWlZoZSyKG8vUDIEknfRXTEMPJKYDQDRuQs+4ESDABoAABwo4UcIG
		HwF2F4H+HyC6DYAAF6AmqkEgChEIZ4UsNOKKOgA+bAAABZZ8PC4YGhCAEuDT
		baA+bHbg/eG4G+HyGGGIGNbwDFK8U6IkAEE7WWGUCkCgCaBmT03ncRWqZmH+
		D0FGGkAABcBCWOAVXBS8FkGQ6uHiy6L/aOJMRCs0C+CNJwDUCQBM/YX8vOGq
		FsGGH+DqFlAiHgAjVDBkXGNOMNbSN/QAO6XCfKeWAdS0FEDiByAAAsAgAPeC
		ADKyG8H1JkGAGWDVC4B4IwEgEkEmF4C2C0CwCGAoUVT2OUHekwH+DYEwGdUa
		IEHsOuOrW6HjYjHI03XSI006XGBgoqAAEmDPZOacQ3h8MCGOhwvWFXUGHcHi
		RSAGwCPrdig+BQhqBqo5fWIFAoO4GVJGFADjZOAYpPc8U6H/gycuFoFsFwDs
		DoDmCYIwV6D8FEDYDYDSC6ZCotOe00dwEgGRciIEA4xDO0HKgeHPGNUap4JA
		QmjDXCN+EuDaB0AABGta+yz6Q0FmGUHGH+EaFWGmMYfKwQKHdeTvkgqclsam
		OQZKdQBGieE2DcBvBoKNV6AGxwFGE2EXFWDOIwDADADEY1TaECA8A4AxeY5s
		bMEAFIGiH+GmscAAHs4YTQgrcnRlRsI1ixN67mCkB0A+bPQCMEE6F0G2H+E4
		FrR+UhDijmUg+4B467JIeWGelWAAB8p+AAEAC2BeqsZgUmHwO0H054HAAMEV
		Q+DqFNoVBQIuB6B+B+CgViEwFeLaBCH+1hHuKEACFMF+G+H+EmFbLGBUBCiC
		BcBGWOfKXGFezeJDXMeWCQBwA8AAEKDABmVA2WXMEaFblGFcF+1CAGdLi8ng
		UgQQL1fGptAqAipNBcw0AADQCg8YCmB2A9n88iMCHcTKHuG3NxCgDcDYCSGS
		TmFyIwJkA0BGFKFOFOGiBsBoBiJ8JYOe+CoEdsH+E0FmNIA0Aq5YGdYo+fkY
		RCurm3JKA2ysAAE6DoB8m0kqACHkw0H+EE3aAAF+GYvcacORDkltDA5YCUwq
		OBHMAAGmmkABr4k+FAD1sSA+ePNmMCfSHKHuGsGuG0HwC8C2C2BcKeHWHIIw
		raEyE4E6GNWcCYBrhWdnj/dcDCESGGAAG0iJKgBSlRYcAAGlr7cncmIg1uOg
		QkAAEYDZhCByBYAsACHMHaTED2E4GVulJGODsvbHBAwKH2Zem0mGAAA7OyJ8
		L8EkDblqIYGzHyH6F8F8GAGQDWDQDQB+uoI4DMDMDOEKxaD0D0rurypas7o0
		FOF6G6H+FqGKvcL6MEGumaURHgtEVMRTgSIZIEXGDACfCMDaCmBYACGtroD4
		E1kGjKRaAManGWIRpTgmAm5YBznltCd9FKVuECDRbaCevlqqvOHtyaH0q6HE
		AMEeEYEaD4xwFA7eI+Y6BQBrcAGMBcBYBOAILwARImOUHgWuH+CwD6F2MgHk
		WwCMB2A+AABQA8yCFWF8G2sPkSgTPCq1iEd0AAE4DyCDYkGmk+Y2ne0YMeAI
		8RlRDkwKJ8N+CeCCBGeYGdt0HcHeO4BIliRIPAE8D1wPvvoybMxSHOHuG7bm
		ACDEC+DABsnGG7lGI/WQAGEmEoEsGCCiCmCcB2AxRNRQxIACE2FkGwH+G9B8
		IIGEGY6uSkL8RQPApgZ2quAbqWFEEDWNnqlYESE9W2O+WwKG2tx0IRkiBBBw
		AACeB/0sG+iYAAFaF0NIDqDDTCC2CMBLqr2mjDKy+UF1dCGBWIDcCLmUJCCO
		CSNkEd4QFCgCA+ZIL5AUZ3mos0C8EAF8AAHQ1WCQB6zwGuzgGwG6lYAgAaL1
		2hdcD5iOABh2gqEmFNMgphut3GIJki1KAAA8A2QToCs0HYmmlA3+lvCEEmDr
		hCAQfBoykOTIHwuSARjiDoCqfoF8FYJQLyAQAWE2E8E+GUCMCICEtmWN2DmW
		ACGEGcHOH+EoFTe8HoaypA9wCwCUBUO6HwXGFgF6GyAACT3UScAabIFUFwGv
		z7Ubh+4daSBTi73CWyymomB6BEhfDfYBEwAAEyD8CEd+tn3wr2OfgyH8GOGQ
		GWGmDODKDGB1QhIIJSCQCQCSC6EWEaEYFEBKBH4YODQOMMwEACbMEaFIGe30
		FhR+DICoBeABhePAFnzyAAAomh+ItQGiGsrXPLJ+QpBBiUkIlsAbS0DMCs5A
		GBsoheGorWAgkkCoCMBJqcCpxeMKstP/o0MoHwHEbiAQDvjl6afp6gNLWQAK
		EejyF0CgCeCaCAA4IAGgy/wAAII/4QAADCwA+35BEOn2cAG44ngAG03XcACU
		PxGAGCy3HCgDBQoEgUAG233YAAFL4LMZlM5pNZtN5xOZlCQACQQBAA/H4/gA
		CgSBgABgKAwA7Xg9gAaCuMQArl82gAJw+EAAjDkPJJB4TC4W+n3Z223HABV0
		uV2uDocziTIQ/37OrxebwJ74Mkymk4wRYLRQDAmEa4/sVBJjLwEAXi9H0/zU
		hmBSQKBQA73jUHA44udDCNwAsWA3Yw3XWAAIBAFQX7RAIA9fettt5li5dj9h
		RBOIgqAB4Mw4AFIsGoACeRRKAGAyZG53U8gARh6IQAgzWOQACwTj8W/7JM26
		3nC+3C4nI9zKYzEO2/8WruPp9ZiVywWDmfT6fkYEIQA2f4FQIALFH8xiCscA
		J5HqyY8EgY4AF6YZvAAMYrBgAB0nae4AGWaRzAACYJASABvnEd4ABQEjgpWd
		qCoSni6t2kr6p4hSCxsmbERMd54Q8A4Ds0eh6nyAAuigFoAHCc55gAZ5qnQA
		AKAmlIOAuBgAESOIdAABgFALAzdMaAQBgCcx0HQfM1HWA5CTgNRXlaVpLvtO
		77LIAZAECQJSC0LgtiwDwNoGzKgRomUFnyfUEEaURnowcEVGcaRzgAKQkBS5
		xknCADEAQAAihyEAAEuUhmtY1ykgMoCfKAeB5Q88cyTLGzGUOADYruoSiH62
		IADMLIZgAW5gtQC4LS0eZ6SOz8VC2J0llOWbkieIwTAAO4x2IpaFwPBLdsed
		8fn0cZzHSAxUlQVBQEOQpCjEutwzxerbgZfAIEaRxHFoIojCMHYOA0Cx/tbR
		EcQUx8bNeVZcm2f5Slma6DLuABsm8lo3jCGwAFq08vgWpB0nUegAA8DgHgAD
		YLgaABZF0bCXNoAATBECYASEzRpGrS7dCMIASQ2dh6gAdB1SfX6CA0DAHAAG
		IUgsABUlo+Ykh/oRXFxilCZUOIxBqAAjh2DwAoRBFEzKx54niedzHKc4DGAX
		5gF8Ow6joJ5773k17b9eoKcCDZGEcR5Zh+HwehiDWCH+pUxXAmTxoWx5znWe
		p/kqUpogAZJoREG4Xg20pd5kKglhUABXlxmQpiT1Jpm0dIAVychyniAAUhM4
		IEJ/i5txhBCiAqCgFgAD+mgAZUQgAFQSuCXxiQsNIuhoABOFTSIIgfEwiuvC
		4qBWAAKgiBOzLttMyzPth4n32x0gKZBk/mOi4ieeB3Hd2e//5/gLP/A6IYQw
		iBVhACCD8G4GQMMFQIAhMaCCbILR0SocI7x/inFoNkAAxxmjlNYAMpg2Btjq
		AAHAMoOAACjFcNIAECAPgAGEp0AAMnREGMYOcc51AGgOVCeoi4VnUAAEsKEZ
		YAAbHEAAMgZhI2bAUAADsGxxQoBEBEAAEoHwIo2KIeFyRDCyABHYO0d4+x0j
		pHYAUYgw40h6D0HgK7+R3KXf7HOOgAAIR3AoHoPYfBOhMCYE0JwGAMM4MQyp
		eb6SZwSRyO5IA/xhjMREMhz4AB3DxHwAAaI00pgaAu04bI3ISArBUBhXQ+yC
		DlHQ7gw5KW4HUBqDF0Y6miAABYCiJwPQaHFBsC+UgEgIPmRiAByJNUFoHH8O
		Y6Q/4xDxAGLUWYsxViHgEGceg9B5oqjrNmbTBwDBjDGGQPwXwwhhDsB4DoGw
		CvEAk44pT55Dk3JeQwlxMx7D3MmOsd8l1znUkYkdZg+jYF3hAUwBrIgAAYAq
		SkCoElQgdAyy5Q6OyYxbbQTZyZZFmD0H6OiMwA2SDsHwJ0TgnBDCjFCKAQyv
		1fzapZS0moNgbg3CMG0NobhFg0BsDUFxJyuR3AewY2k7l5l4ovPKiRjSclEJ
		oWKd5OqigBHzVEf0Zh2gCHkZEAAzRmjPGaJISAjw6jOGcM0X9LqzVnJwAutQ
		DgqBVCqG0Kx+A2gmBKCQC4DwHtOryAudgBqJSHYTWhHJMYvFkXmPYfA+B/jw
		HePKqyRQADeG4N0cy7BTiRFaKsVglh7j4Hu32wVobRE2f+BYDwUAoBRDKEgJ
		YSwu10BIVuvB3QFqhKMAgf5mTNRfJujKYJNYvQTJsuCxNAB6j2HsAG46Hh4j
		ySeN0tI3hbXTFCLEWArxOjsu1B60d3bvG2AcA4B4Ewdg7B0EoIIQghhUBaC4
		FwOgNAbA0BQBwDUtAHAMUhXJrSmG0KZPEkhJR+oyH+r4fhdyz4ILOACxM/lm
		AAhwdIaQ0hojFF8L0XwrBjjHGMLceeH5sXfxFiNvwFcTAaBQCkFINAWYtBwC
		MEgJAYKFA0CABoEQIvFASAkBdukxOUbOP4fZZh93IHsPSRg8B2DpHOOYb42y
		0jQGqNQaYyBr5XGYO3LSU8SZdy9d63QB18AMAeAqtYCEhHfJeARA4/LEj4yM
		Pa52Hx5FCH4kfL+ec9Z7z5n3P2f9AaB0FoPQmhbQkBAADwEAAAMAAAABAEAA
		AAEBAAMAAAABAEAAAAECAAMAAAAEAAAc+gEDAAMAAAABAAUAAAEGAAMAAAAB
		AAIAAAERAAQAAAABAAAACAESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMA
		AAABAEAAAAEXAAQAAAABAAAcOAEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFS
		AAMAAAABAAEAAAFTAAMAAAAEAAAdAodzAAcAAAfYAAAdCgAALlIACAAIAAgA
		CAABAAEAAQABAAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgAL
		YWNzcEFQUEwAAAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1h
		cHBsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAALZGVzYwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3Rw
		dAAAB0wAAAAUclhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAU
		clRSQwAAB5wAAAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wA
		AAAOZGVzYwAAAAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAA
		FEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NL
		AAAAKAAAAYRkYURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5w
		dEJSAAAAJgAAAiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAA
		App6aFRXAAAAFgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAA
		HgAAAyBpdElUAAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tS
		AAAAFgAAA7ZzdlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+Jl
		bEdSAAAAIgAAA/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAA
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "http://stackexchange.com/questions?tab=realtime"
set urlToFetch to "http://stackexchange.com/questions?tab=realtime"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "http://stackexchange.com/questions?tab=realtime"set urlToFetch to "http://stackexchange.com/questions?tab=realtime"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728761.50023496</real>
				<key>Name</key>
				<string>w: Stack real time</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>606A3266-AE46-45B9-B44E-A78C0976384A</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "https://toggl.com/"
set urlToFetch to "https://toggl.com/app/reports/summary/862483/period/thisWeek/billable/both"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "https://toggl.com/"set urlToFetch to "https://toggl.com/app/reports/summary/862483/period/thisWeek/billable/both"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728762.49490595</real>
				<key>Name</key>
				<string>w: Toggl week</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>DD4A45E9-E36F-4128-AC61-4EC8A4F94410</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		RGgYFPcAAzhgC4ABOCIEgCuS5FSVJWmaMoyDIIh6VBESXA4DoOhOWpaloZAX
		BaFwIKyfZ/k+aLcF+cB4gABoDNY7DLHCd57tE2AAKyhTZx62SB2GAACNfSIK
		gbHJ52CAoCNKPAdg4AAQghSh8HyfIADwPA9keSJIEgOSuEKQpDFKPQ9DyLUN
		AAWxtHaf5TGg3AQSEABqnS7h6xo0aBTglljgFQACn4fQAAscxugABAXBgAFd
		tLgwAEKIoRTjXYAmqaxsnqJwmicHcFQYiAP5aFUmF4ZgSBGEYEnUeh7n+Qxe
		nA9VEHMeFgn3PkyT0w5+gI1gDnseoACMXxTAAY4ZiJQwOhHXIDLoAwB0AIgT
		AiAAtBgDAAn5E4+j8QJMkQQ5DDQiAyjKMw/kyTJLEAALYlEZZyn+XBrHbXIE
		UAcB2zckNkJa2Z+ALHAGnkdlGlMRYAGCGQggAZQbiWAABHxNwMAiBWHxuAB4
		HtFxHikE8XgU/hgGGYhyCcJYlhiefc8khQBFGUpSmELgtC0HZ8H2fR/kAWpt
		gAeZ8q2bh0JUfWib0w3GyGDB0YkOxQkOABnhGFAAFGKg6WYfbwIJYoAAzSYA
		ALZwtBsDQACOFILgCc50ryKInhRCYMmAQtiEAOgMBUXwvxfDVBmDIGYFRtjq
		HiP8QIsBsueNiOgeJ4HqFbSUREug+y3gABMNsZYAA7CmEkjkCKYxAhle+PwA
		iOFKlbfWnADwFD8PWAACoDi0Q7hIBOAEfA+lghoDOGsPiXhQCFIQCGKALRgD
		BF+M0DwHQPgFGCNgvIoRhjiAAdcuQ4h0kqNJB8hqe4bA2GoL0AAbhXCnIKHg
		NgfAADlAwCZZjDViELWqaUDoFAFpHV0AARQVwWGxLkH4PwhBOiEEIIIMhCAV
		yVB1AkXwxQLAVAqAAWQzhyD/FRF8AA9h8ouHc85ZJEjxkCB+2AAAdROh9NkM
		QZoABGBPDAAAX4MgnMXH2sEhh/yBAPAWjgDQE5BrWIEJAMAMAAq7UAIsRYjh
		WB2mwFUhBOwVA4GAL8XoxyfgYAALQZw4h/iplIPsfZlhyDsO4XSNBdU+gYAk
		6QTQbgegAAoPcdwARRhvEaP8TAGgfGyWcpUhyljWvxfbMpOJqwACUDIDIAK1
		VACKEUI0VQd6PBXIQB6kQKYpjAGeCEEAIQDjFGuOcf4mRbDcAAO+VQ7INwYI
		UweHgigyA2AADsFIFgAimGJOgTAuHmD8HssGecw04AQAaAdGoFHSATdMIkMI
		MaFFyD2HsP4mG2iHDSQgjACwIC6F6L0aoOgbg3A0OGCQ/w8ieGcxdZoABvjm
		HkAAfR1zZRoHzK0L4SXxhuCeCoAIkRYDVXyLx5iy29VNIiBV0azFnA4BVJ0O
		oVAXABqW00MYZAzB0FQKYUwjSGCaE2JoXKnAyhGOurEQAnxngAHCduvA5VcH
		/YOQKdhlgYAoAsAASIbAcgAEQKcaAABbjFHCsyZkPCuEgLkCMDwEK/l0DME5
		1oPwXAbACOMcY4h+BNZOEQaN6RgkMCsFcK4bxSikFGJBpJrBWDAG6P8U4uqZ
		AOdMNcbjkiPlyTCkMQYaLjijFvBcYwzziAGNQg59gGQMLRASjE1szBKhzB4n
		EBLWhbC3FwNkKYUgpg1JOSkhhMAKAdF2LwXQ0QYAvBiBEelSx/h+EyMwAA4n
		pAAHasAAFgTqBRa+AAaQ23JDUG0bjCCgErkCNgXQDIF1okbNKFkIwJAABPB8
		COIkRgABxDgHQQomBLiXjsRNA4bxGCQEeI0ObejSjGGkOYf4jRRXLAoBMuA5
		2bgAbOZYvB3AC4ROKVlOCcAXP4AAPIei4QQgcAcAAQ4bAcWWNgMUZAyx1BSS
		0DUdWo4wETTEA8CwrRXCuGQEMIQQgQr0FiMAb4/xOCuGorkBSOCjrhHQOuMz
		GUAECukQ/AaLwHlwAuBU/A8R5LhBICC7AfQzA1ABZQBYASjjvAAGgNAaw5Cp
		FQKgR5xQa1tCQKsVYqRYAfixVJMgABXC+vyLAXrEh1o6Ret22w5URTylLKY0
		SzjzGWAQAc+migAbubCPKm4DgH1SA4Bc/AdgxAyAABcCYDQAtDRcJISYlRYh
		3DqHUKpIR+ouyillLbdhMCWAwBcDGwl/jcHWrIV41QAaATcOwdrTQNAY0qOL
		fyNehAAHMOevYHQNpjf2SoB4DkhtJNKEYHYIAABbCdHp+IBWzJmAAKQUoqBi
		hvOSFEeXaU1ZRIQYkJYYBGiQEaJIFIJgTrRj6vQZg1R1D/GEMkcgABxjmJUO
		UdRKuDn0JIi4CPUp+ARSGDAFSkAhA5A74/bJBB7ebAAJ4TwoBbh8D4HsMA8f
		TG47YQ+bgOPRB8EcFAKATgcoXkGQYuR5lYjzHow4e6NFrF0AWAo+nwQDmxyg
		QUrY0RqDVHmJQSIlBGm6E+Ihs4/Fw+pJbfUBASgkhLC4FwMAXAzg7B0DoGWV
		QLZTNYRIuQ8x6kqGyNgbI6xYixFmLG+IpBJDf/4NP7D/5ZQiwFInYGgGoGwG
		oICSoFYGIDUBoDgBQjABQfidgfod8CwdgbkDIbQZ4ZwZ4YwZwZwZoYQ4Qdo4
		kAEE4wyyIAbRRg5xUFEF8GEGIlogIAAADwEAAAMAAAABACAAAAEBAAMAAAAB
		ACAAAAECAAMAAAAEAAAvDAEDAAMAAAABAAUAAAEGAAMAAAABAAIAAAERAAQA
		AAABAAAk4gESAAMAAAABAAEAAAEVAAMAAAABAAQAAAEWAAMAAAABACAAAAEX
		AAQAAAABAAAJbwEcAAMAAAABAAEAAAE9AAMAAAABAAIAAAFSAAMAAAABAAEA
		AAFTAAMAAAAEAAAvFIdzAAcAAAfYAAAvHAAAOhoACAAIAAgACAABAAEAAQAB
		AAAH2GFwcGwCIAAAbW50clJHQiBYWVogB9kAAgAZAAsAGgALYWNzcEFQUEwA
		AAAAYXBwbAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1hcHBsAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZGVz
		YwAAAQgAAABvZHNjbQAAAXgAAAWcY3BydAAABxQAAAA4d3RwdAAAB0wAAAAU
		clhZWgAAB2AAAAAUZ1hZWgAAB3QAAAAUYlhZWgAAB4gAAAAUclRSQwAAB5wA
		AAAOY2hhZAAAB6wAAAAsYlRSQwAAB5wAAAAOZ1RSQwAAB5wAAAAOZGVzYwAA
		AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAFEdlbmVyaWMg
		UkdCIFByb2ZpbGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAG1sdWMAAAAAAAAAHwAAAAxza1NLAAAAKAAAAYRk
		YURLAAAALgAAAaxjYUVTAAAAJAAAAdp2aVZOAAAAJAAAAf5wdEJSAAAAJgAA
		AiJ1a1VBAAAAKgAAAkhmckZVAAAAKAAAAnJodUhVAAAAKAAAApp6aFRXAAAA
		FgAAAsJuYk5PAAAAJgAAAthjc0NaAAAAIgAAAv5oZUlMAAAAHgAAAyBpdElU
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "travis-ci.org"
set urlToFetch to "https://travis-ci.org/profile/nikitavoloboev"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "travis-ci.org"set urlToFetch to "https://travis-ci.org/profile/nikitavoloboev"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728763.47763503</real>
				<key>Name</key>
				<string>w: Travis</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>997A635C-F27C-4EE5-96C8-E0C73511C245</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "tutanota.com"
set urlToFetch to "https://app.tutanota.com/#box"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "tutanota.com"set urlToFetch to "https://app.tutanota.com/#box"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728764.46364498</real>
				<key>Name</key>
				<string>w: Tutanota</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>FE1860BA-C223-4DDB-A3AD-DD436C22053E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "twitch.tv"
set urlToFetch to "https://www.twitch.tv/nglgzz"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "twitch.tv"set urlToFetch to "https://www.twitch.tv/nglgzz"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728765.44044602</real>
				<key>Name</key>
				<string>w: Twitch</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>D6FE6C69-0A64-45C3-AFB9-2C3215E03899</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "twitter.com"
set urlToFetch to "https://twitter.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "twitter.com"set urlToFetch to "https://twitter.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728766.41922903</real>
				<key>Name</key>
				<string>w: Twitter</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>1C1C7CFF-2ACC-4D0D-9AC4-728FE7A89F66</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "unsplash.com"
set urlToFetch to "https://unsplash.com"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "unsplash.com"set urlToFetch to "https://unsplash.com"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728767.40102804</real>
				<key>Name</key>
				<string>w: Unsplash</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>945E29DA-A470-4F29-95A9-7FD421B25117</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "wakatime.com"set urlToFetch to "https://www.wakatime.com/dashboard/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "wakatime.com"set urlToFetch to "https://www.wakatime.com/dashboard/"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728768.38594794</real>
				<key>Name</key>
				<string>w: Wakatime</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>CC425C62-CDC0-42CE-8695-DAF3CC10422F</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "wikiwand.com"
set urlToFetch to "http://www.wikiwand.com/news"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "wikiwand.com"set urlToFetch to "http://www.wikiwand.com/news"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728769.37003696</real>
				<key>Name</key>
				<string>w: Wiki</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>D4063BA1-51ED-4B87-AAA5-67A175BBE834</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "youtube.com"
set urlToFetch to "https://www.youtube.com/feed/subscriptions"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------# Auth: Christopher Stone# dCre: 2017/01/06 19:04# dMod: 2017/03/06 17:40# Appl: Safari# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.# Libs: None# Osax: None# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window# Vers: 2.0------------------------------------------------------------------------------set urlFilterText to "youtube.com"set urlToFetch to "https://www.youtube.com/feed/subscriptions"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728775.34019601</real>
				<key>Name</key>
				<string>w: YouTube</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>E5C4A318-9DF3-4BAD-928B-8D665FC628C7</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>504914386.529239</real>
		<key>CustomIconData</key>
		<data>
		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
		BB50aFRIAAAAJAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAA
		KAAABNpwbFBMAAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVT
		AAAAJgAABXYAVgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYA
		aQBsAEcAZQBuAGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBs
		AHMAZQBQAGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUA
		dQAgAGgA7ABuAGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAg
		AFIARwBCACAARwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAE
		PwRABD4ERAQwBDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QBy
		AGkAcQB1AGUAIABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAA
		cAByAG8AZgBpAGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBp
		AHMAawAgAFIARwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcA
		QgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZ
		AFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIA
		bwBmAGkAbAAgAFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBl
		AGkAbgBlAHMAIABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDV
		BLhc0wzHfGZukBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDX
		MO0w1TChMKQw6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIA
		UABlAHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBl
		AG0AZQBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUO
		TAAgAFIARwBCACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYA
		aQBpAGwAaQBHAGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBp
		AGwAVQBuAGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcA
		QgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYq
		BjkGMQZKBkEAIABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAA
		UgBHAEIAIABQAHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBB
		cHBsZSBJbmMuLCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IA
		AQAAAAEWz1hZWiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAA
		FzRYWVogAAAAAAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAA
		AAABDEIAAAXe///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYN
		B4RCYVC4ZDYdD4hEYlCQFFQKC4wDwMBgOCH8/n6/Xu93w9Hw+Hu84nK5ZLYU
		FJgHB2PB4SR4Ox2QxSKhSKwtPwqB6EB5BH3g8Xg8nC4XE4WbT2Qwaktmm0mk
		xX/WX7Lq5LJ+Fg+Xi+YDkWSyWCyKhWKAqCAMCYW/4OAYPW3K5nQ/1+v2Ax04
		m04jqkwFbXcNCSSSSUXz+gD6hxuNhuGYM/oHlna+X4/3a+Ms9pAAAGAQEAAg
		BdKFgQBAABwGAroANjogA6nW6gAoFAoVWikSiTi7eE5cPKwEazYbEOgUEfzs
		EwiFIG/AA9H2/X+wXQ9AAzHW+AA8X1W3i/K2CIqAM9cgYBLp7dKGwWBQAQQy
		DAAKQgCNjdH8f7LFqWxdGwOA3DeLBvG8bpouKhg3QORhDkQQw5gUBK4IErZf
		nKeZ/libx4AAyy6Hu8wAAwBL6HQe59gACIDtYeDNAADQGAMAB1ns6jLIEj7L
		BOCQEAAL8ggACa3NmABeF6YBwjIMYxiUpZwmtByBicJ4njOUJQlATAIAeB4A
		H6fzNk+ap1gAZx0ntEa5AA+a6HUesXRayzzTg2J+I+AEbgG9TNgAEb9gAe7s
		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
		AAAAKAAAAz5yb1JPAAAAJAAAA2ZkZURFAAAALAAAA4prb0tSAAAAFgAAA7Zz
		dlNFAAAAJgAAAth6aENOAAAAFgAAA8xqYUpQAAAAGgAAA+JlbEdSAAAAIgAA
		A/xwdFBPAAAAJgAABB5ubE5MAAAAKAAABERlc0VTAAAAJgAABB50aFRIAAAA
		JAAABGx0clRSAAAAIgAABJBmaUZJAAAAKAAABLJockhSAAAAKAAABNpwbFBM
		AAAALAAABQJydVJVAAAAIgAABS5hckVHAAAAJgAABVBlblVTAAAAJgAABXYA
		VgFhAGUAbwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsAEcAZQBu
		AGUAcgBlAGwAIABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZQBQAGUA
		cgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6AByAGkAYwBDHqUAdQAgAGgA7ABu
		AGgAIABSAEcAQgAgAEMAaAB1AG4AZwBQAGUAcgBmAGkAbAAgAFIARwBCACAA
		RwBlAG4A6QByAGkAYwBvBBcEMAQzBDAEOwRMBD0EOAQ5ACAEPwRABD4ERAQw
		BDkEOwAgAFIARwBCAFAAcgBvAGYAaQBsACAAZwDpAG4A6QByAGkAcQB1AGUA
		IABSAFYAQgDBAGwAdABhAGwA4QBuAG8AcwAgAFIARwBCACAAcAByAG8AZgBp
		AGyQGnUoACAAUgBHAEIAIIJyX2ljz4/wAEcAZQBuAGUAcgBpAHMAawAgAFIA
		RwBCAC0AcAByAG8AZgBpAGwATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBv
		AGYAaQBsBeQF6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAFAAcgBvAGYA
		aQBsAG8AIABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAbwBQAHIAbwBmAGkAbAAg
		AFIARwBCACAAZwBlAG4AZQByAGkAYwBBAGwAbABnAGUAbQBlAGkAbgBlAHMA
		IABSAEcAQgAtAFAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc0wzHfGZu
		kBoAIABSAEcAQgAgY8+P8GWHTvZOAIIsACAAUgBHAEIAIDDXMO0w1TChMKQw
		6wOTA7UDvQO5A7oDzAAgA8ADwQO/A8YDrwO7ACAAUgBHAEIAUABlAHIAZgBp
		AGwAIABSAEcAQgAgAGcAZQBuAOkAcgBpAGMAbwBBAGwAZwBlAG0AZQBlAG4A
		IABSAEcAQgAtAHAAcgBvAGYAaQBlAGwOQg4bDiMORA4fDiUOTAAgAFIARwBC
		ACAOFw4xDkgOJw5EDhsARwBlAG4AZQBsACAAUgBHAEIAIABQAHIAbwBmAGkA
		bABpAFkAbABlAGkAbgBlAG4AIABSAEcAQgAtAHAAcgBvAGYAaQBpAGwAaQBH
		AGUAbgBlAHIAaQENAGsAaQAgAFIARwBCACAAcAByAG8AZgBpAGwAVQBuAGkA
		dwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwAIABSAEcAQgQeBDEESQQ4
		BDkAIAQ/BEAEPgREBDgEOwRMACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEA
		IABSAEcAQgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBHAEIAIABQ
		AHIAbwBmAGkAbABldGV4dAAAAABDb3B5cmlnaHQgMjAwNyBBcHBsZSBJbmMu
		LCBhbGwgcmlnaHRzIHJlc2VydmVkLgBYWVogAAAAAAAA81IAAQAAAAEWz1hZ
		WiAAAAAAAAB0TQAAPe4AAAPQWFlaIAAAAAAAAFp1AACscwAAFzRYWVogAAAA
		AAAAKBoAABWfAAC4NmN1cnYAAAAAAAAAAQHNAABzZjMyAAAAAAABDEIAAAXe
		///zJgAAB5IAAP2R///7ov///aMAAAPcAADAbIAAIFA4JBYNB4RCYVC4ZAgR
		DwaSSSSCiSSMRCMIA9G30+36/Gs12w2FitFosmLKVzA3/DYWMRkMh8lEij0m
		NR4Phc4X1LXM9XyAAIAgEAA+DQMAAm/HwAFYqVSszmdDsbHVV3FLoENK4P5O
		sVi7gWFQeq2u53+4nq+gA+X5LQGAYdQwAJgiCgCXhcGQA2GGwGkTymVCS7na
		7XNCAZiwiwWAu2QBhEMBMlGM4H+63pbHw+n8AH8AZboIEAQKBKU/qaGwuEAA
		eSEJQCpEuklMbDYby5LIIWy2WjSoFIpUsfFq2H+1XQ8wA93znwFcoK+wMBwA
		Im0zQA/AEAwA8xSMAAQhIEryKwW+hsNx2OGz72fBFUqFItBMPyiS0IsWm/3Y
		eaguk6YAu8HBoF4AANHUrJYiMMAAAKAK5BACgFgARQsBcAI8jcNQ7EyTJNEX
		CQAgIZJjmGZxzAQEYWk0W7kHme59gA6K5H2AbvCQdhpgAHpalOABDisPDmgO
		Bsan+z4LAiBIAEGLQZACWhQEkTKqDwNDSxMY5gGac4ChIFxLFiap/nmey2H6
		fqWhgFAKgAOwegwAA9E2YoAHEAwJAAAZ/n6goLruABDDEG4AlmUJJEwOo7jy
		NKCFIUZQFeF4fikKA9EyYp/nSdh7AACIIAQAAyCUFQAFMXxuAAcZ0npCDRAA
		0ahLiAARg61xIjaHgAjkNgzDiTxPE+SCCClZAwFWVpWk+OxJ04ZRpHQAAVhK
		CYAG+cp4gAdh21AAgBqLWh/3KAAHAdUgotiAItCACp7hmGgcBob97GsgiHgQ
		BhclyWphAyEQahiQpNGMf5vnEeDvnpAMBIG7rvAWBICgAGAVAsABCjeH4Akm
		RxDEwPI8j5SCFhRlAZJMkoAAQDYMk2VJnAAaptHWf56zTGsJAACFRgAHAYA2
		AIzCwGIAGCXhZmG3wvCgeeoHcrQABJqoXEeR5GEiIwjCSIB0nfQBzHSeUIRy
		AAPA4B2WgCe59E0ThOFKQBAkEOp5nkeR26mhESAIHvACLwQhCIEIQhAEB98U
		fhqmqaxrFqW5dFsa/GmXvnMczzSDICAAAA8BAAADAAAAAQAQAAABAQADAAAA
		AQAQAAABAgADAAAABAAAOtQBAwADAAAAAQAFAAABBgADAAAAAQACAAABEQAE
		AAAAAQAANvQBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAQAAAB
		FwAEAAAAAQAAAyUBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAAAQAB
		AAABUwADAAAABAAAOtyHcwAHAAAH2AAAOuQAAAAAAAgACAAIAAgAAQABAAEA
		AQAAB9hhcHBsAiAAAG1udHJSR0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBM
		AAAAAGFwcGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBwbAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Rl
		c2MAAAEIAAAAb2RzY20AAAF4AAAFnGNwcnQAAAcUAAAAOHd0cHQAAAdMAAAA
		FHJYWVoAAAdgAAAAFGdYWVoAAAd0AAAAFGJYWVoAAAeIAAAAFHJUUkMAAAec
		AAAADmNoYWQAAAesAAAALGJUUkMAAAecAAAADmdUUkMAAAecAAAADmRlc2MA
		AAAAAAAAFEdlbmVyaWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
		IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAAAAAAAAAABtbHVjAAAAAAAAAB8AAAAMc2tTSwAAACgAAAGE
		ZGFESwAAAC4AAAGsY2FFUwAAACQAAAHadmlWTgAAACQAAAH+cHRCUgAAACYA
		AAIidWtVQQAAACoAAAJIZnJGVQAAACgAAAJyaHVIVQAAACgAAAKaemhUVwAA
		ABYAAALCbmJOTwAAACYAAALYY3NDWgAAACIAAAL+aGVJTAAAAB4AAAMgaXRJ
		VAAAACgAAAM+cm9STwAAACQAAANmZGVERQAAACwAAAOKa29LUgAAABYAAAO2
		c3ZTRQAAACYAAALYemhDTgAAABYAAAPMamFKUAAAABoAAAPiZWxHUgAAACIA
		AAP8cHRQTwAAACYAAAQebmxOTAAAACgAAAREZXNFUwAAACYAAAQedGhUSAAA
		ACQAAARsdHJUUgAAACIAAASQZmlGSQAAACgAAASyaHJIUgAAACgAAATacGxQ
		TAAAACwAAAUCcnVSVQAAACIAAAUuYXJFRwAAACYAAAVQZW5VUwAAACYAAAV2
		AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIAbwBmAGkAbABHAGUA
		bgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGUAUABl
		AHIAZgBpAGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAQx6lAHUAIABoAOwA
		bgBoACAAUgBHAEIAIABDAGgAdQBuAGcAUABlAHIAZgBpAGwAIABSAEcAQgAg
		AEcAZQBuAOkAcgBpAGMAbwQXBDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQE
		MAQ5BDsAIABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBpAHEAdQBl
		ACAAUgBWAEIAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYA
		aQBskBp1KAAgAFIARwBCACCCcl9pY8+P8ABHAGUAbgBlAHIAaQBzAGsAIABS
		AEcAQgAtAHAAcgBvAGYAaQBsAE8AYgBlAGMAbgD9ACAAUgBHAEIAIABwAHIA
		bwBmAGkAbAXkBegF1QXkBdkF3AAgAFIARwBCACAF2wXcBdwF2QBQAHIAbwBm
		AGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjAG8AUAByAG8AZgBpAGwA
		IABSAEcAQgAgAGcAZQBuAGUAcgBpAGMAQQBsAGwAZwBlAG0AZQBpAG4AZQBz
		ACAAUgBHAEIALQBQAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3xm
		bpAaACAAUgBHAEIAIGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
		MOsDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAgAFIARwBCAFAAZQByAGYA
		aQBsACAAUgBHAEIAIABnAGUAbgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBu
		ACAAUgBHAEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwAIABSAEcA
		QgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAgAFIARwBCACAAUAByAG8AZgBp
		AGwAaQBZAGwAZQBpAG4AZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkA
		RwBlAG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYAaQBsAFUAbgBp
		AHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
		OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZB
		ACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAA
		UAByAG8AZgBpAGwAZXRleHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5j
		LiwgYWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNSAAEAAAABFs9Y
		WVogAAAAAAAAdE0AAD3uAAAD0FhZWiAAAAAAAABadQAArHMAABc0WFlaIAAA
		AAAAACgaAAAVnwAAuDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
		3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
		</data>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "youtubeonrepeat.com"
set urlToFetch to "http://www.youtubeonrepeat.com/watch/?v=eAv_hlRWnYY"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set urlFilterText to "youtubeonrepeat.com"set urlToFetch to "http://www.youtubeonrepeat.com/watch/?v=eAv_hlRWnYY"tell application "Safari"	tell front window		set filteredTabIndexList to index of tabs where its URL contains urlFilterText		set currentTabIndex to index of current tab				if filteredTabIndexList = {} then -- New						set tabURL to URL of current tab						try				tabURL -- will be undefine if blank				make new tab at end of tabs with properties {URL:urlToFetch}				set current tab to last tab			on error				# Tab is blank, so we'll just use it.				set its current tab's URL to urlToFetch			end try						return					end if				if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)		else			set current tab to tab (item 1 of filteredTabIndexList)		end if			end tellend tell--------------------------------------------------------------------------------» HANDLERS------------------------------------------------------------------------------on getListItemOffset(theList, listItemValue)	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"	repeat with listItemNum from 1 to (length of theList)		if (item listItemNum of theList) = listItemValue then			return listItemNum		end if	end repeatend getListItemOffset------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504914603.04704398</real>
				<key>ModificationDate</key>
				<real>537728778.40103996</real>
				<key>Name</key>
				<string>w: YouTube autoplay</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>B9F97A85-4A72-4BC7-ACDC-C6D56118D187</string>
			</dict>
		</array>
		<key>Name</key>
		<string>w: Open websites (Safari)</string>
		<key>ToggleMacroUID</key>
		<string>8CC64A22-3A63-407C-8A51-AABE51348C61</string>
		<key>UID</key>
		<string>81093A61-68D7-4D5B-9E37-E829CBE17215</string>
	</dict>
</array>
</plist>
